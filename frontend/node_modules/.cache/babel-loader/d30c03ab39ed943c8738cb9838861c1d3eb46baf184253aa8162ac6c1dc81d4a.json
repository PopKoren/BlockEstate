{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evyatar\\\\Documents\\\\Smart contract\\\\website\\\\BlockEstate\\\\frontend\\\\src\\\\real-estate-package\\\\components\\\\ui\\\\PropertyForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Card, CardHeader, CardContent } from './card';\n// import { Button } from './button';\n// import { Input } from './input';\n// import { Textarea } from './textarea';\n// import { Plus, Loader2, ChevronDown } from 'lucide-react';\n// import { validatePropertyFormData } from '../../utilsApp/errors';\n\n// // Constants from our error handling utilities\n// const ISRAELI_CITIES = [\n//     'Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion',\n//     'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva',\n//     'Holon', 'Bnei Brak'\n// ];\n\n// const PropertyForm = ({ onSubmit, contract, isProcessing }) => {\n//     const [showCities, setShowCities] = useState(false);\n//     const [formErrors, setFormErrors] = useState({});\n//     const [property, setProperty] = useState({\n//         id: '',\n//         title: '',\n//         description: '',\n//         location: '',\n//         price: ''\n//     });\n\n//    // In PropertyForm.jsx, modify the handleSubmit function\n// const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log('Form submitted with data:', property);\n\n//     const errors = validatePropertyFormData(property);\n\n//     if (Object.keys(errors).length === 0) {\n//         try {\n//             await onSubmit(property);\n//             // Clear form only after successful submission\n//             setProperty({\n//                 id: '',\n//                 title: '',\n//                 description: '',\n//                 location: '',\n//                 price: ''\n//             });\n//             setFormErrors({});\n//         } catch (error) {\n//             console.error('Form submission error:', error);\n//             setFormErrors({ submit: error.message });\n//         }\n//     } else {\n//         console.log('Validation errors:', errors);\n//         setFormErrors(errors);\n//     }\n// };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setProperty(prev => ({\n//             ...prev,\n//             [name]: value\n//         }));\n//         // Clear error for this field when user starts typing\n//         if (formErrors[name]) {\n//             setFormErrors(prev => {\n//                 const newErrors = { ...prev };\n//                 delete newErrors[name];\n//                 return newErrors;\n//             });\n//         }\n//     };\n\n//     const selectCity = (city) => {\n//         setProperty(prev => ({\n//             ...prev,\n//             location: city\n//         }));\n//         setShowCities(false);\n//     };\n\n//     return (\n//         <Card>\n//             <CardHeader>\n//                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\n//                     <Plus className=\"h-5 w-5\" />\n//                     List New Property\n//                 </h2>\n//             </CardHeader>\n//             <CardContent>\n//                 <form onSubmit={handleSubmit} className=\"space-y-4\">\n//                     <div>\n//                         <Input\n//                             name=\"id\"\n//                             placeholder=\"Property ID\"\n//                             value={property.id}\n//                             onChange={handleInputChange}\n//                             className={formErrors.id ? 'border-red-500' : ''}\n//                             disabled={isProcessing}\n//                         />\n//                         {formErrors.id && (\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.id}</p>\n//                         )}\n//                     </div>\n\n//                     <div>\n//                         <Input\n//                             name=\"title\"\n//                             placeholder=\"Property Title\"\n//                             value={property.title}\n//                             onChange={handleInputChange}\n//                             className={formErrors.title ? 'border-red-500' : ''}\n//                             disabled={isProcessing}\n//                         />\n//                         {formErrors.title && (\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.title}</p>\n//                         )}\n//                     </div>\n\n//                     <div>\n//                         <Textarea\n//                             name=\"description\"\n//                             placeholder=\"Property Description\"\n//                             value={property.description}\n//                             onChange={handleInputChange}\n//                             className={`min-h-[100px] ${formErrors.description ? 'border-red-500' : ''}`}\n//                             disabled={isProcessing}\n//                         />\n//                         {formErrors.description && (\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.description}</p>\n//                         )}\n//                     </div>\n\n//                     <div className=\"relative\">\n//                         <div className=\"flex gap-2\">\n//                             <Input\n//                                 name=\"location\"\n//                                 placeholder=\"Location\"\n//                                 value={property.location}\n//                                 onChange={handleInputChange}\n//                                 className={formErrors.location ? 'border-red-500' : ''}\n//                                 disabled={isProcessing}\n//                             />\n//                             <Button\n//                                 type=\"button\"\n//                                 variant=\"outline\"\n//                                 onClick={() => setShowCities(!showCities)}\n//                                 className=\"flex items-center gap-2\"\n//                             >\n//                                 <ChevronDown className={`h-4 w-4 transform ${showCities ? 'rotate-180' : ''}`} />\n//                             </Button>\n//                         </div>\n//                         {showCities && (\n//                             <div className=\"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg\">\n//                                 {ISRAELI_CITIES.map((city) => (\n//                                     <button\n//                                         key={city}\n//                                         type=\"button\"\n//                                         className=\"w-full px-4 py-2 text-left hover:bg-gray-100\"\n//                                         onClick={() => selectCity(city)}\n//                                     >\n//                                         {city}\n//                                     </button>\n//                                 ))}\n//                             </div>\n//                         )}\n//                         {formErrors.location && (\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.location}</p>\n//                         )}\n//                     </div>\n\n//                     <div>\n//                         <Input\n//                             name=\"price\"\n//                             type=\"number\"\n//                             step=\"0.01\"\n//                             placeholder=\"Price (ETH)\"\n//                             value={property.price}\n//                             onChange={handleInputChange}\n//                             className={formErrors.price ? 'border-red-500' : ''}\n//                             disabled={isProcessing}\n//                         />\n//                         {formErrors.price && (\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.price}</p>\n//                         )}\n//                     </div>\n\n//                     <Button \n//                         type=\"submit\" \n//                         disabled={isProcessing || !contract}\n//                         className=\"w-full\"\n//                     >\n//                         {isProcessing ? (\n//                             <div className=\"flex items-center justify-center gap-2\">\n//                                 <Loader2 className=\"h-4 w-4 animate-spin\" />\n//                                 Processing...\n//                             </div>\n//                         ) : 'List Property'}\n//                     </Button>\n//                 </form>\n//             </CardContent>\n//         </Card>\n//     );\n// };\n\n// export default PropertyForm;\n\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardContent } from './card';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Textarea } from './textarea';\nimport { Plus, Loader2, ChevronDown } from 'lucide-react';\nimport { validatePropertyFormData } from '../../utilsApp/errors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ISRAELI_CITIES = ['Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion', 'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva', 'Holon', 'Bnei Brak'];\nconst PropertyForm = ({\n  onSubmit,\n  contract,\n  isProcessing\n}) => {\n  _s();\n  const [showCities, setShowCities] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [property, setProperty] = useState({\n    id: '',\n    title: '',\n    description: '',\n    location: '',\n    price: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submitting property:', property);\n\n    // Validate form data\n    const errors = validatePropertyFormData(property);\n    if (Object.keys(errors).length > 0) {\n      console.log('Validation errors:', errors);\n      setFormErrors(errors);\n      return;\n    }\n    try {\n      // Ensure all required fields are filled\n      if (!property.id || !property.title || !property.location || !property.price) {\n        throw new Error('Please fill in all required fields');\n      }\n\n      // Ensure price is a valid number\n      const price = parseFloat(property.price);\n      if (isNaN(price) || price <= 0) {\n        throw new Error('Please enter a valid price');\n      }\n      await onSubmit({\n        ...property,\n        price: price.toString() // Ensure price is sent as string\n      });\n\n      // Clear form only after successful submission\n      setProperty({\n        id: '',\n        title: '',\n        description: '',\n        location: '',\n        price: ''\n      });\n      setFormErrors({});\n    } catch (error) {\n      console.error('Form submission error:', error);\n      setFormErrors({\n        submit: error.message\n      });\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'price') {\n      // Only allow positive numbers\n      if (value && parseFloat(value) < 0) return;\n    }\n    if (name === 'description') {\n      const lines = value.split('\\n');\n      if (lines.length <= 4) {\n        setProperty(prev => ({\n          ...prev,\n          [name]: value\n        }));\n      }\n      return;\n    }\n    setProperty(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when user starts typing\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const selectCity = city => {\n    setProperty(prev => ({\n      ...prev,\n      location: city\n    }));\n    setShowCities(false);\n    if (formErrors.location) {\n      setFormErrors(prev => ({\n        ...prev,\n        location: ''\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), \"List New Property\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"id\",\n            placeholder: \"Property ID (letters, numbers, hyphens only)\",\n            value: property.id,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.id ? 'border-red-500' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), formErrors.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"title\",\n            placeholder: \"Property Title (single line)\",\n            value: property.title,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.title ? 'border-red-500' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            name: \"description\",\n            placeholder: \"Property Description (max 4 lines)\",\n            value: property.description,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: `min-h-[100px] ${formErrors.description ? 'border-red-500' : ''}`,\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative cursor-pointer\",\n            onClick: () => !isProcessing && setShowCities(!showCities),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"location\",\n              placeholder: \"Select Location\",\n              value: property.location,\n              readOnly: true,\n              required: true,\n              disabled: isProcessing,\n              className: formErrors.location ? 'border-red-500' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: \"absolute right-3 top-3 h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), showCities && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg max-h-60 overflow-auto\",\n            children: ISRAELI_CITIES.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => selectCity(city),\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this), formErrors.location && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"price\",\n            type: \"number\",\n            step: \"0.01\",\n            min: \"0\",\n            placeholder: \"Price (ETH)\",\n            value: property.price,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.price ? 'border-red-500' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), formErrors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this), formErrors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\",\n          children: formErrors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isProcessing || !contract,\n          className: \"w-full\",\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"h-4 w-4 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }, this), \"Processing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 29\n          }, this) : 'List Property'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n_s(PropertyForm, \"rmkrm+qYNG1c3vqBjqnwvBP/2Ss=\");\n_c = PropertyForm;\nexport default PropertyForm;\nvar _c;\n$RefreshReg$(_c, \"PropertyForm\");","map":{"version":3,"names":["React","useState","Card","CardHeader","CardContent","Button","Input","Textarea","Plus","Loader2","ChevronDown","validatePropertyFormData","jsxDEV","_jsxDEV","ISRAELI_CITIES","PropertyForm","onSubmit","contract","isProcessing","_s","showCities","setShowCities","formErrors","setFormErrors","property","setProperty","id","title","description","location","price","handleSubmit","e","preventDefault","console","log","errors","Object","keys","length","Error","parseFloat","isNaN","toString","error","submit","message","handleInputChange","name","value","target","lines","split","prev","selectCity","city","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","disabled","rows","onClick","readOnly","map","type","step","min","_c","$RefreshReg$"],"sources":["C:/Users/evyatar/Documents/Smart contract/website/BlockEstate/frontend/src/real-estate-package/components/ui/PropertyForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Card, CardHeader, CardContent } from './card';\r\n// import { Button } from './button';\r\n// import { Input } from './input';\r\n// import { Textarea } from './textarea';\r\n// import { Plus, Loader2, ChevronDown } from 'lucide-react';\r\n// import { validatePropertyFormData } from '../../utilsApp/errors';\r\n\r\n// // Constants from our error handling utilities\r\n// const ISRAELI_CITIES = [\r\n//     'Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion',\r\n//     'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva',\r\n//     'Holon', 'Bnei Brak'\r\n// ];\r\n\r\n// const PropertyForm = ({ onSubmit, contract, isProcessing }) => {\r\n//     const [showCities, setShowCities] = useState(false);\r\n//     const [formErrors, setFormErrors] = useState({});\r\n//     const [property, setProperty] = useState({\r\n//         id: '',\r\n//         title: '',\r\n//         description: '',\r\n//         location: '',\r\n//         price: ''\r\n//     });\r\n\r\n//    // In PropertyForm.jsx, modify the handleSubmit function\r\n// const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log('Form submitted with data:', property);\r\n    \r\n//     const errors = validatePropertyFormData(property);\r\n    \r\n//     if (Object.keys(errors).length === 0) {\r\n//         try {\r\n//             await onSubmit(property);\r\n//             // Clear form only after successful submission\r\n//             setProperty({\r\n//                 id: '',\r\n//                 title: '',\r\n//                 description: '',\r\n//                 location: '',\r\n//                 price: ''\r\n//             });\r\n//             setFormErrors({});\r\n//         } catch (error) {\r\n//             console.error('Form submission error:', error);\r\n//             setFormErrors({ submit: error.message });\r\n//         }\r\n//     } else {\r\n//         console.log('Validation errors:', errors);\r\n//         setFormErrors(errors);\r\n//     }\r\n// };\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setProperty(prev => ({\r\n//             ...prev,\r\n//             [name]: value\r\n//         }));\r\n//         // Clear error for this field when user starts typing\r\n//         if (formErrors[name]) {\r\n//             setFormErrors(prev => {\r\n//                 const newErrors = { ...prev };\r\n//                 delete newErrors[name];\r\n//                 return newErrors;\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     const selectCity = (city) => {\r\n//         setProperty(prev => ({\r\n//             ...prev,\r\n//             location: city\r\n//         }));\r\n//         setShowCities(false);\r\n//     };\r\n\r\n//     return (\r\n//         <Card>\r\n//             <CardHeader>\r\n//                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n//                     <Plus className=\"h-5 w-5\" />\r\n//                     List New Property\r\n//                 </h2>\r\n//             </CardHeader>\r\n//             <CardContent>\r\n//                 <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//                     <div>\r\n//                         <Input\r\n//                             name=\"id\"\r\n//                             placeholder=\"Property ID\"\r\n//                             value={property.id}\r\n//                             onChange={handleInputChange}\r\n//                             className={formErrors.id ? 'border-red-500' : ''}\r\n//                             disabled={isProcessing}\r\n//                         />\r\n//                         {formErrors.id && (\r\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.id}</p>\r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <Input\r\n//                             name=\"title\"\r\n//                             placeholder=\"Property Title\"\r\n//                             value={property.title}\r\n//                             onChange={handleInputChange}\r\n//                             className={formErrors.title ? 'border-red-500' : ''}\r\n//                             disabled={isProcessing}\r\n//                         />\r\n//                         {formErrors.title && (\r\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.title}</p>\r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <Textarea\r\n//                             name=\"description\"\r\n//                             placeholder=\"Property Description\"\r\n//                             value={property.description}\r\n//                             onChange={handleInputChange}\r\n//                             className={`min-h-[100px] ${formErrors.description ? 'border-red-500' : ''}`}\r\n//                             disabled={isProcessing}\r\n//                         />\r\n//                         {formErrors.description && (\r\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.description}</p>\r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <div className=\"relative\">\r\n//                         <div className=\"flex gap-2\">\r\n//                             <Input\r\n//                                 name=\"location\"\r\n//                                 placeholder=\"Location\"\r\n//                                 value={property.location}\r\n//                                 onChange={handleInputChange}\r\n//                                 className={formErrors.location ? 'border-red-500' : ''}\r\n//                                 disabled={isProcessing}\r\n//                             />\r\n//                             <Button\r\n//                                 type=\"button\"\r\n//                                 variant=\"outline\"\r\n//                                 onClick={() => setShowCities(!showCities)}\r\n//                                 className=\"flex items-center gap-2\"\r\n//                             >\r\n//                                 <ChevronDown className={`h-4 w-4 transform ${showCities ? 'rotate-180' : ''}`} />\r\n//                             </Button>\r\n//                         </div>\r\n//                         {showCities && (\r\n//                             <div className=\"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg\">\r\n//                                 {ISRAELI_CITIES.map((city) => (\r\n//                                     <button\r\n//                                         key={city}\r\n//                                         type=\"button\"\r\n//                                         className=\"w-full px-4 py-2 text-left hover:bg-gray-100\"\r\n//                                         onClick={() => selectCity(city)}\r\n//                                     >\r\n//                                         {city}\r\n//                                     </button>\r\n//                                 ))}\r\n//                             </div>\r\n//                         )}\r\n//                         {formErrors.location && (\r\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.location}</p>\r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <Input\r\n//                             name=\"price\"\r\n//                             type=\"number\"\r\n//                             step=\"0.01\"\r\n//                             placeholder=\"Price (ETH)\"\r\n//                             value={property.price}\r\n//                             onChange={handleInputChange}\r\n//                             className={formErrors.price ? 'border-red-500' : ''}\r\n//                             disabled={isProcessing}\r\n//                         />\r\n//                         {formErrors.price && (\r\n//                             <p className=\"text-red-500 text-sm mt-1\">{formErrors.price}</p>\r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <Button \r\n//                         type=\"submit\" \r\n//                         disabled={isProcessing || !contract}\r\n//                         className=\"w-full\"\r\n//                     >\r\n//                         {isProcessing ? (\r\n//                             <div className=\"flex items-center justify-center gap-2\">\r\n//                                 <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n//                                 Processing...\r\n//                             </div>\r\n//                         ) : 'List Property'}\r\n//                     </Button>\r\n//                 </form>\r\n//             </CardContent>\r\n//         </Card>\r\n//     );\r\n// };\r\n\r\n// export default PropertyForm;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent } from './card';\r\nimport { Button } from './button';\r\nimport { Input } from './input';\r\nimport { Textarea } from './textarea';\r\nimport { Plus, Loader2, ChevronDown } from 'lucide-react';\r\nimport { validatePropertyFormData } from '../../utilsApp/errors';\r\nconst ISRAELI_CITIES = [\r\n    'Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion',\r\n    'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva',\r\n    'Holon', 'Bnei Brak'\r\n];\r\n\r\nconst PropertyForm = ({ onSubmit, contract, isProcessing }) => {\r\n    const [showCities, setShowCities] = useState(false);\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [property, setProperty] = useState({\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        price: ''\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('Submitting property:', property);\r\n\r\n        // Validate form data\r\n        const errors = validatePropertyFormData(property);\r\n        if (Object.keys(errors).length > 0) {\r\n            console.log('Validation errors:', errors);\r\n            setFormErrors(errors);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Ensure all required fields are filled\r\n            if (!property.id || !property.title || !property.location || !property.price) {\r\n                throw new Error('Please fill in all required fields');\r\n            }\r\n\r\n            // Ensure price is a valid number\r\n            const price = parseFloat(property.price);\r\n            if (isNaN(price) || price <= 0) {\r\n                throw new Error('Please enter a valid price');\r\n            }\r\n\r\n            await onSubmit({\r\n                ...property,\r\n                price: price.toString() // Ensure price is sent as string\r\n            });\r\n\r\n            // Clear form only after successful submission\r\n            setProperty({\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                location: '',\r\n                price: ''\r\n            });\r\n            setFormErrors({});\r\n        } catch (error) {\r\n            console.error('Form submission error:', error);\r\n            setFormErrors({ submit: error.message });\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        \r\n        if (name === 'price') {\r\n            // Only allow positive numbers\r\n            if (value && parseFloat(value) < 0) return;\r\n        }\r\n        \r\n        if (name === 'description') {\r\n            const lines = value.split('\\n');\r\n            if (lines.length <= 4) {\r\n                setProperty(prev => ({ ...prev, [name]: value }));\r\n            }\r\n            return;\r\n        }\r\n\r\n        setProperty(prev => ({ ...prev, [name]: value }));\r\n        \r\n        // Clear error when user starts typing\r\n        if (formErrors[name]) {\r\n            setFormErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    const selectCity = (city) => {\r\n        setProperty(prev => ({\r\n            ...prev,\r\n            location: city\r\n        }));\r\n        setShowCities(false);\r\n        if (formErrors.location) {\r\n            setFormErrors(prev => ({\r\n                ...prev,\r\n                location: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n                    <Plus className=\"h-5 w-5\" />\r\n                    List New Property\r\n                </h2>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    <div>\r\n                        <Input\r\n                            name=\"id\"\r\n                            placeholder=\"Property ID (letters, numbers, hyphens only)\"\r\n                            value={property.id}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.id ? 'border-red-500' : ''}\r\n                        />\r\n                        {formErrors.id && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.id}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Input\r\n                            name=\"title\"\r\n                            placeholder=\"Property Title (single line)\"\r\n                            value={property.title}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.title ? 'border-red-500' : ''}\r\n                        />\r\n                        {formErrors.title && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.title}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Textarea\r\n                            name=\"description\"\r\n                            placeholder=\"Property Description (max 4 lines)\"\r\n                            value={property.description}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={`min-h-[100px] ${formErrors.description ? 'border-red-500' : ''}`}\r\n                            rows={4}\r\n                        />\r\n                        {formErrors.description && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.description}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"relative\">\r\n                        <div\r\n                            className=\"relative cursor-pointer\"\r\n                            onClick={() => !isProcessing && setShowCities(!showCities)}\r\n                        >\r\n                            <Input\r\n                                name=\"location\"\r\n                                placeholder=\"Select Location\"\r\n                                value={property.location}\r\n                                readOnly\r\n                                required\r\n                                disabled={isProcessing}\r\n                                className={formErrors.location ? 'border-red-500' : ''}\r\n                            />\r\n                            <ChevronDown className=\"absolute right-3 top-3 h-4 w-4\" />\r\n                        </div>\r\n                        {showCities && (\r\n                            <div className=\"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg max-h-60 overflow-auto\">\r\n                                {ISRAELI_CITIES.map((city) => (\r\n                                    <div\r\n                                        key={city}\r\n                                        className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                                        onClick={() => selectCity(city)}\r\n                                    >\r\n                                        {city}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        {formErrors.location && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.location}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Input\r\n                            name=\"price\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            placeholder=\"Price (ETH)\"\r\n                            value={property.price}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.price ? 'border-red-500' : ''}\r\n                        />\r\n                        {formErrors.price && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.price}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {formErrors.submit && (\r\n                        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\r\n                            {formErrors.submit}\r\n                        </div>\r\n                    )}\r\n\r\n                    <Button \r\n                        type=\"submit\" \r\n                        disabled={isProcessing || !contract}\r\n                        className=\"w-full\"\r\n                    >\r\n                        {isProcessing ? (\r\n                            <div className=\"flex items-center justify-center gap-2\">\r\n                                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                                Processing...\r\n                            </div>\r\n                        ) : 'List Property'}\r\n                    </Button>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PropertyForm;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,UAAU,EAAEC,WAAW,QAAQ,QAAQ;AACtD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,IAAI,EAAEC,OAAO,EAAEC,WAAW,QAAQ,cAAc;AACzD,SAASC,wBAAwB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjE,MAAMC,cAAc,GAAG,CACnB,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,eAAe,EACjD,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAChD,OAAO,EAAE,WAAW,CACvB;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC;IACrCyB,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEX,QAAQ,CAAC;;IAE7C;IACA,MAAMY,MAAM,GAAGzB,wBAAwB,CAACa,QAAQ,CAAC;IACjD,IAAIa,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MAChCL,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,MAAM,CAAC;MACzCb,aAAa,CAACa,MAAM,CAAC;MACrB;IACJ;IAEA,IAAI;MACA;MACA,IAAI,CAACZ,QAAQ,CAACE,EAAE,IAAI,CAACF,QAAQ,CAACG,KAAK,IAAI,CAACH,QAAQ,CAACK,QAAQ,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;QAC1E,MAAM,IAAIU,KAAK,CAAC,oCAAoC,CAAC;MACzD;;MAEA;MACA,MAAMV,KAAK,GAAGW,UAAU,CAACjB,QAAQ,CAACM,KAAK,CAAC;MACxC,IAAIY,KAAK,CAACZ,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,EAAE;QAC5B,MAAM,IAAIU,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMxB,QAAQ,CAAC;QACX,GAAGQ,QAAQ;QACXM,KAAK,EAAEA,KAAK,CAACa,QAAQ,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;;MAEF;MACAlB,WAAW,CAAC;QACRC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACX,CAAC,CAAC;MACFP,aAAa,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CrB,aAAa,CAAC;QAAEsB,MAAM,EAAED,KAAK,CAACE;MAAQ,CAAC,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAIf,CAAC,IAAK;IAC7B,MAAM;MAAEgB,IAAI;MAAEC;IAAM,CAAC,GAAGjB,CAAC,CAACkB,MAAM;IAEhC,IAAIF,IAAI,KAAK,OAAO,EAAE;MAClB;MACA,IAAIC,KAAK,IAAIR,UAAU,CAACQ,KAAK,CAAC,GAAG,CAAC,EAAE;IACxC;IAEA,IAAID,IAAI,KAAK,aAAa,EAAE;MACxB,MAAMG,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC;MAC/B,IAAID,KAAK,CAACZ,MAAM,IAAI,CAAC,EAAE;QACnBd,WAAW,CAAC4B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACL,IAAI,GAAGC;QAAM,CAAC,CAAC,CAAC;MACrD;MACA;IACJ;IAEAxB,WAAW,CAAC4B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;;IAEjD;IACA,IAAI3B,UAAU,CAAC0B,IAAI,CAAC,EAAE;MAClBzB,aAAa,CAAC8B,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAACL,IAAI,GAAG;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMM,UAAU,GAAIC,IAAI,IAAK;IACzB9B,WAAW,CAAC4B,IAAI,KAAK;MACjB,GAAGA,IAAI;MACPxB,QAAQ,EAAE0B;IACd,CAAC,CAAC,CAAC;IACHlC,aAAa,CAAC,KAAK,CAAC;IACpB,IAAIC,UAAU,CAACO,QAAQ,EAAE;MACrBN,aAAa,CAAC8B,IAAI,KAAK;QACnB,GAAGA,IAAI;QACPxB,QAAQ,EAAE;MACd,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACX,IAAI;IAAAsD,QAAA,gBACD3C,OAAA,CAACV,UAAU;MAAAqD,QAAA,eACP3C,OAAA;QAAI4C,SAAS,EAAC,+CAA+C;QAAAD,QAAA,gBACzD3C,OAAA,CAACL,IAAI;UAACiD,SAAS,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,qBAEhC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACbhD,OAAA,CAACT,WAAW;MAAAoD,QAAA,eACR3C,OAAA;QAAMG,QAAQ,EAAEe,YAAa;QAAC0B,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAC/C3C,OAAA;UAAA2C,QAAA,gBACI3C,OAAA,CAACP,KAAK;YACF0C,IAAI,EAAC,IAAI;YACTc,WAAW,EAAC,8CAA8C;YAC1Db,KAAK,EAAEzB,QAAQ,CAACE,EAAG;YACnBqC,QAAQ,EAAEhB,iBAAkB;YAC5BiB,QAAQ;YACRC,QAAQ,EAAE/C,YAAa;YACvBuC,SAAS,EAAEnC,UAAU,CAACI,EAAE,GAAG,gBAAgB,GAAG;UAAG;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,EACDvC,UAAU,CAACI,EAAE,iBACVb,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAElC,UAAU,CAACI;UAAE;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC9D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENhD,OAAA;UAAA2C,QAAA,gBACI3C,OAAA,CAACP,KAAK;YACF0C,IAAI,EAAC,OAAO;YACZc,WAAW,EAAC,8BAA8B;YAC1Cb,KAAK,EAAEzB,QAAQ,CAACG,KAAM;YACtBoC,QAAQ,EAAEhB,iBAAkB;YAC5BiB,QAAQ;YACRC,QAAQ,EAAE/C,YAAa;YACvBuC,SAAS,EAAEnC,UAAU,CAACK,KAAK,GAAG,gBAAgB,GAAG;UAAG;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,EACDvC,UAAU,CAACK,KAAK,iBACbd,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAElC,UAAU,CAACK;UAAK;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACjE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENhD,OAAA;UAAA2C,QAAA,gBACI3C,OAAA,CAACN,QAAQ;YACLyC,IAAI,EAAC,aAAa;YAClBc,WAAW,EAAC,oCAAoC;YAChDb,KAAK,EAAEzB,QAAQ,CAACI,WAAY;YAC5BmC,QAAQ,EAAEhB,iBAAkB;YAC5BiB,QAAQ;YACRC,QAAQ,EAAE/C,YAAa;YACvBuC,SAAS,EAAE,iBAAiBnC,UAAU,CAACM,WAAW,GAAG,gBAAgB,GAAG,EAAE,EAAG;YAC7EsC,IAAI,EAAE;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,EACDvC,UAAU,CAACM,WAAW,iBACnBf,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAElC,UAAU,CAACM;UAAW;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACvE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENhD,OAAA;UAAK4C,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACrB3C,OAAA;YACI4C,SAAS,EAAC,yBAAyB;YACnCU,OAAO,EAAEA,CAAA,KAAM,CAACjD,YAAY,IAAIG,aAAa,CAAC,CAACD,UAAU,CAAE;YAAAoC,QAAA,gBAE3D3C,OAAA,CAACP,KAAK;cACF0C,IAAI,EAAC,UAAU;cACfc,WAAW,EAAC,iBAAiB;cAC7Bb,KAAK,EAAEzB,QAAQ,CAACK,QAAS;cACzBuC,QAAQ;cACRJ,QAAQ;cACRC,QAAQ,EAAE/C,YAAa;cACvBuC,SAAS,EAAEnC,UAAU,CAACO,QAAQ,GAAG,gBAAgB,GAAG;YAAG;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eACFhD,OAAA,CAACH,WAAW;cAAC+C,SAAS,EAAC;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,EACLzC,UAAU,iBACPP,OAAA;YAAK4C,SAAS,EAAC,uFAAuF;YAAAD,QAAA,EACjG1C,cAAc,CAACuD,GAAG,CAAEd,IAAI,iBACrB1C,OAAA;cAEI4C,SAAS,EAAC,4CAA4C;cACtDU,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAACC,IAAI,CAAE;cAAAC,QAAA,EAE/BD;YAAI,GAJAA,IAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR,EACAvC,UAAU,CAACO,QAAQ,iBAChBhB,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAElC,UAAU,CAACO;UAAQ;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACpE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAENhD,OAAA;UAAA2C,QAAA,gBACI3C,OAAA,CAACP,KAAK;YACF0C,IAAI,EAAC,OAAO;YACZsB,IAAI,EAAC,QAAQ;YACbC,IAAI,EAAC,MAAM;YACXC,GAAG,EAAC,GAAG;YACPV,WAAW,EAAC,aAAa;YACzBb,KAAK,EAAEzB,QAAQ,CAACM,KAAM;YACtBiC,QAAQ,EAAEhB,iBAAkB;YAC5BiB,QAAQ;YACRC,QAAQ,EAAE/C,YAAa;YACvBuC,SAAS,EAAEnC,UAAU,CAACQ,KAAK,GAAG,gBAAgB,GAAG;UAAG;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,EACDvC,UAAU,CAACQ,KAAK,iBACbjB,OAAA;YAAG4C,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAElC,UAAU,CAACQ;UAAK;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACjE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAELvC,UAAU,CAACuB,MAAM,iBACdhC,OAAA;UAAK4C,SAAS,EAAC,gEAAgE;UAAAD,QAAA,EAC1ElC,UAAU,CAACuB;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CACR,eAEDhD,OAAA,CAACR,MAAM;UACHiE,IAAI,EAAC,QAAQ;UACbL,QAAQ,EAAE/C,YAAY,IAAI,CAACD,QAAS;UACpCwC,SAAS,EAAC,QAAQ;UAAAD,QAAA,EAEjBtC,YAAY,gBACTL,OAAA;YAAK4C,SAAS,EAAC,wCAAwC;YAAAD,QAAA,gBACnD3C,OAAA,CAACJ,OAAO;cAACgD,SAAS,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBAEhD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GACN;QAAe;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAAC1C,EAAA,CAlOIJ,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AAoOlB,eAAeA,YAAY;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}