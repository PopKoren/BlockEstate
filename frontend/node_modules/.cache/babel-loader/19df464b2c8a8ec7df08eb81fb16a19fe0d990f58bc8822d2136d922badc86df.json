{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evyatar\\\\Documents\\\\Smart contract\\\\website\\\\BlockEstate\\\\frontend\\\\src\\\\real-estate-package\\\\components\\\\ui\\\\PropertyForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardContent } from './card';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Textarea } from './textarea';\nimport { Plus, Loader2, ChevronDown, Image as ImageIcon } from 'lucide-react';\nimport { sanitizeInput, validateSecurity, validateFormSecurity, validatePropertyField, sanitizeAndValidateInput } from '../../utilsApp/security';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ISRAELI_CITIES = ['Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion', 'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva', 'Holon', 'Bnei Brak'];\nconst PropertyForm = ({\n  onSubmit,\n  contract,\n  isProcessing,\n  web3Instance,\n  account\n}) => {\n  _s();\n  const [showCities, setShowCities] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [property, setProperty] = useState({\n    id: '',\n    title: '',\n    description: '',\n    location: '',\n    price: '',\n    image: null\n  });\n  const [imagePreview, setImagePreview] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let sanitizedValue = sanitizeAndValidateInput(value, name === 'price' ? 'number' : name === 'description' ? 'multiline' : 'text', name === 'id' ? 50 : name === 'title' ? 60 : name === 'description' ? 280 : undefined);\n    if (name === 'description') {\n      const lines = value.split('\\n');\n      if (lines.length > 4) {\n        sanitizedValue = lines.slice(0, 4).join('\\n');\n      }\n      if (sanitizedValue.length > 280) {\n        sanitizedValue = sanitizedValue.substring(0, 280);\n      }\n    }\n    if (name === 'price') {\n      const numValue = parseFloat(sanitizedValue);\n      if (numValue > 1000000) return;\n    }\n    setProperty(prev => ({\n      ...prev,\n      [name]: sanitizedValue\n    }));\n    const error = validatePropertyField(name, sanitizedValue);\n    setFormErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 5242880) {\n        setFormErrors(prev => ({\n          ...prev,\n          image: 'Image size should not exceed 5MB'\n        }));\n        return;\n      }\n\n      // Convert image to base64 string for blockchain storage\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const imageData = reader.result.split(',')[1]; // Remove data URI prefix\n        setProperty(prev => ({\n          ...prev,\n          image: imageData\n        }));\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const fieldErrors = {};\n    Object.entries(property).forEach(([field, value]) => {\n      if (field === 'image') return;\n      const error = validatePropertyField(field, value);\n      if (error) fieldErrors[field] = error;\n    });\n    const securityErrors = validateFormSecurity(property);\n    const allErrors = {\n      ...fieldErrors,\n      ...securityErrors\n    };\n    if (Object.keys(allErrors).length > 0) {\n      setFormErrors(allErrors);\n      setIsSubmitting(false);\n      return;\n    }\n    if (!property.image) {\n      setFormErrors(prev => ({\n        ...prev,\n        image: 'Property image is required'\n      }));\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      if (!web3Instance || !account) {\n        setFormErrors({\n          submit: 'Please ensure your wallet is connected before listing a property'\n        });\n        setIsSubmitting(false);\n        return;\n      }\n      if (contract) {\n        const properties = await contract.methods.getAllProperties().call();\n        const propertyExists = properties.some(prop => prop.id.toLowerCase() === property.id.toLowerCase());\n        if (propertyExists) {\n          setFormErrors(prev => ({\n            ...prev,\n            id: 'This Property ID is already in use. Please choose a different unique identifier.'\n          }));\n          setIsSubmitting(false);\n          return;\n        }\n      }\n      const priceInWei = web3Instance.utils.toWei(property.price.toString(), 'ether');\n      console.log('Submitting property with data:', {\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: priceInWei,\n        location: property.location,\n        imageSize: property.image ? property.image.length : 0\n      });\n      const transaction = await contract.methods.createProperty(property.id, property.title, property.description, priceInWei, property.location, [property.image]).send({\n        from: account,\n        gas: 500000\n      });\n      console.log('Transaction successful:', transaction.transactionHash);\n      setProperty({\n        id: '',\n        title: '',\n        description: '',\n        location: '',\n        price: '',\n        image: null\n      });\n      setImagePreview('');\n      setFormErrors({});\n      setSuccessMessage('Property listed successfully! Transaction hash: ' + transaction.transactionHash);\n      await onSubmit({\n        id: property.id,\n        title: property.title,\n        description: property.description,\n        price: priceInWei,\n        location: property.location,\n        documents: [property.image]\n      });\n    } catch (error) {\n      console.error('Property listing error:', error);\n      let errorMessage = 'Failed to list property. Please check your inputs and try again.';\n      if (error.message.includes('gas')) {\n        errorMessage = 'Transaction failed due to gas estimation. Please try with a smaller image size.';\n      } else if (error.message.includes('User denied')) {\n        errorMessage = 'Transaction was cancelled. Please try again to list your property.';\n      } else if (error.message.includes('insufficient funds')) {\n        errorMessage = 'Insufficient funds to complete the transaction. Please check your wallet balance.';\n      }\n      setFormErrors({\n        submit: errorMessage\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const selectCity = city => {\n    if (ISRAELI_CITIES.includes(city)) {\n      setProperty(prev => ({\n        ...prev,\n        location: city\n      }));\n      setShowCities(false);\n      setFormErrors(prev => ({\n        ...prev,\n        location: ''\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), \"List New Property\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"id\",\n            placeholder: \"Property ID (letters, numbers, hyphens only)\",\n            value: property.id,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.id ? 'border-red-500' : '',\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), formErrors.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed rounded-lg p-4 text-center hover:bg-gray-50 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              className: \"hidden\",\n              id: \"property-image\",\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"property-image\",\n              className: \"cursor-pointer flex flex-col items-center\",\n              children: [imagePreview ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePreview,\n                alt: \"Property preview\",\n                className: \"max-h-48 object-contain mb-2 rounded-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(ImageIcon, {\n                className: \"h-12 w-12 text-gray-400 mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: imagePreview ? 'Change image' : 'Upload property image (max 5MB)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), formErrors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"title\",\n            placeholder: \"Property Title\",\n            value: property.title,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.title ? 'border-red-500' : '',\n            maxLength: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            name: \"description\",\n            placeholder: \"Property Description (4 lines maximum)\",\n            value: property.description,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: `min-h-[100px] resize-none ${formErrors.description ? 'border-red-500' : ''}`,\n            rows: 4,\n            maxLength: 400,\n            onKeyDown: e => {\n              const lines = e.target.value.split('\\n');\n              if (e.key === 'Enter' && lines.length >= 4) {\n                e.preventDefault();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative cursor-pointer\",\n            onClick: () => !isProcessing && setShowCities(!showCities),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"location\",\n              placeholder: \"Select Location\",\n              value: property.location,\n              readOnly: true,\n              required: true,\n              disabled: isProcessing,\n              className: formErrors.location ? 'border-red-500' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: \"absolute right-3 top-3 h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), showCities && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg max-h-60 overflow-auto\",\n            children: ISRAELI_CITIES.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => selectCity(city),\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), formErrors.location && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"price\",\n            type: \"number\",\n            step: \"0.01\",\n            min: \"0\",\n            max: \"1000000\",\n            placeholder: \"Price (ETH)\",\n            value: property.price,\n            onChange: handleInputChange,\n            required: true,\n            disabled: isProcessing,\n            className: formErrors.price ? 'border-red-500' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), formErrors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: formErrors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), formErrors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\",\n          children: formErrors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isProcessing || !contract,\n          className: \"w-full\",\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"h-4 w-4 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 33\n            }, this), \"Processing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this) : 'List Property'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n_s(PropertyForm, \"7Er823rcbwpVIxTtPJaRp0qdyoM=\");\n_c = PropertyForm;\nexport default PropertyForm;\nvar _c;\n$RefreshReg$(_c, \"PropertyForm\");","map":{"version":3,"names":["React","useState","Card","CardHeader","CardContent","Button","Input","Textarea","Plus","Loader2","ChevronDown","Image","ImageIcon","sanitizeInput","validateSecurity","validateFormSecurity","validatePropertyField","sanitizeAndValidateInput","jsxDEV","_jsxDEV","ISRAELI_CITIES","PropertyForm","onSubmit","contract","isProcessing","web3Instance","account","_s","showCities","setShowCities","formErrors","setFormErrors","property","setProperty","id","title","description","location","price","image","imagePreview","setImagePreview","isSubmitting","setIsSubmitting","successMessage","setSuccessMessage","handleInputChange","e","name","value","target","sanitizedValue","undefined","lines","split","length","slice","join","substring","numValue","parseFloat","prev","error","handleImageChange","file","files","size","reader","FileReader","onloadend","imageData","result","readAsDataURL","handleSubmit","preventDefault","fieldErrors","Object","entries","forEach","field","securityErrors","allErrors","keys","submit","properties","methods","getAllProperties","call","propertyExists","some","prop","toLowerCase","priceInWei","utils","toWei","toString","console","log","imageSize","transaction","createProperty","send","from","gas","transactionHash","documents","errorMessage","message","includes","selectCity","city","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","disabled","maxLength","type","accept","htmlFor","src","alt","rows","onKeyDown","key","onClick","readOnly","map","step","min","max","_c","$RefreshReg$"],"sources":["C:/Users/evyatar/Documents/Smart contract/website/BlockEstate/frontend/src/real-estate-package/components/ui/PropertyForm.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent } from './card';\r\nimport { Button } from './button';\r\nimport { Input } from './input';\r\nimport { Textarea } from './textarea';\r\nimport { Plus, Loader2, ChevronDown, Image as ImageIcon } from 'lucide-react';\r\nimport {\r\n    sanitizeInput,\r\n    validateSecurity,\r\n    validateFormSecurity,\r\n    validatePropertyField,\r\n    sanitizeAndValidateInput\r\n} from '../../utilsApp/security';\r\n\r\nconst ISRAELI_CITIES = [\r\n    'Jerusalem', 'Tel Aviv', 'Haifa', 'Rishon LeZion',\r\n    'Petah Tikva', 'Ashdod', 'Netanya', 'Beer Sheva',\r\n    'Holon', 'Bnei Brak'\r\n];\r\n\r\nconst PropertyForm = ({ onSubmit, contract, isProcessing, web3Instance, account }) => {\r\n\r\n    \r\n\r\n    const [showCities, setShowCities] = useState(false);\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [property, setProperty] = useState({\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        price: '',\r\n        image: null\r\n    });\r\n    const [imagePreview, setImagePreview] = useState('');\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        \r\n        let sanitizedValue = sanitizeAndValidateInput(value, \r\n            name === 'price' ? 'number' : \r\n            name === 'description' ? 'multiline' : 'text',\r\n            name === 'id' ? 50 : \r\n            name === 'title' ? 60 : \r\n            name === 'description' ? 280 : undefined\r\n        );\r\n\r\n        if (name === 'description') {\r\n            const lines = value.split('\\n');\r\n            if (lines.length > 4) {\r\n                sanitizedValue = lines.slice(0, 4).join('\\n');\r\n            }\r\n            if (sanitizedValue.length > 280) {\r\n                sanitizedValue = sanitizedValue.substring(0, 280);\r\n            }\r\n        }\r\n\r\n        if (name === 'price') {\r\n            const numValue = parseFloat(sanitizedValue);\r\n            if (numValue > 1000000) return;\r\n        }\r\n\r\n        setProperty(prev => ({\r\n            ...prev,\r\n            [name]: sanitizedValue\r\n        }));\r\n\r\n        const error = validatePropertyField(name, sanitizedValue);\r\n        setFormErrors(prev => ({\r\n            ...prev,\r\n            [name]: error\r\n        }));\r\n    };\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (file.size > 5242880) {\r\n                setFormErrors(prev => ({\r\n                    ...prev,\r\n                    image: 'Image size should not exceed 5MB'\r\n                }));\r\n                return;\r\n            }\r\n    \r\n            // Convert image to base64 string for blockchain storage\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const imageData = reader.result.split(',')[1]; // Remove data URI prefix\r\n                setProperty(prev => ({\r\n                    ...prev,\r\n                    image: imageData\r\n                }));\r\n                setImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n\r\n        const fieldErrors = {};\r\n        Object.entries(property).forEach(([field, value]) => {\r\n            if (field === 'image') return;\r\n            const error = validatePropertyField(field, value);\r\n            if (error) fieldErrors[field] = error;\r\n        });\r\n\r\n        const securityErrors = validateFormSecurity(property);\r\n        const allErrors = { ...fieldErrors, ...securityErrors };\r\n\r\n        if (Object.keys(allErrors).length > 0) {\r\n            setFormErrors(allErrors);\r\n            setIsSubmitting(false);\r\n            return;\r\n        }\r\n\r\n        if (!property.image) {\r\n            setFormErrors(prev => ({\r\n                ...prev,\r\n                image: 'Property image is required'\r\n            }));\r\n            setIsSubmitting(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!web3Instance || !account) {\r\n                setFormErrors({\r\n                    submit: 'Please ensure your wallet is connected before listing a property'\r\n                });\r\n                setIsSubmitting(false);\r\n                return;\r\n            }\r\n\r\n            if (contract) {\r\n                const properties = await contract.methods.getAllProperties().call();\r\n                const propertyExists = properties.some(prop => \r\n                    prop.id.toLowerCase() === property.id.toLowerCase()\r\n                );\r\n                \r\n                if (propertyExists) {\r\n                    setFormErrors(prev => ({\r\n                        ...prev,\r\n                        id: 'This Property ID is already in use. Please choose a different unique identifier.'\r\n                    }));\r\n                    setIsSubmitting(false);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const priceInWei = web3Instance.utils.toWei(property.price.toString(), 'ether');\r\n\r\n            console.log('Submitting property with data:', {\r\n                id: property.id,\r\n                title: property.title,\r\n                description: property.description,\r\n                price: priceInWei,\r\n                location: property.location,\r\n                imageSize: property.image ? property.image.length : 0\r\n            });\r\n\r\n            const transaction = await contract.methods.createProperty(\r\n                property.id,\r\n                property.title,\r\n                property.description,\r\n                priceInWei,\r\n                property.location,\r\n                [property.image]\r\n            ).send({\r\n                from: account,\r\n                gas: 500000\r\n            });\r\n\r\n            console.log('Transaction successful:', transaction.transactionHash);\r\n\r\n            setProperty({\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                location: '',\r\n                price: '',\r\n                image: null\r\n            });\r\n            setImagePreview('');\r\n            setFormErrors({});\r\n            setSuccessMessage('Property listed successfully! Transaction hash: ' + transaction.transactionHash);\r\n\r\n            await onSubmit({\r\n                id: property.id,\r\n                title: property.title,\r\n                description: property.description,\r\n                price: priceInWei,\r\n                location: property.location,\r\n                documents: [property.image]\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Property listing error:', error);\r\n            \r\n            let errorMessage = 'Failed to list property. Please check your inputs and try again.';\r\n            \r\n            if (error.message.includes('gas')) {\r\n                errorMessage = 'Transaction failed due to gas estimation. Please try with a smaller image size.';\r\n            } else if (error.message.includes('User denied')) {\r\n                errorMessage = 'Transaction was cancelled. Please try again to list your property.';\r\n            } else if (error.message.includes('insufficient funds')) {\r\n                errorMessage = 'Insufficient funds to complete the transaction. Please check your wallet balance.';\r\n            }\r\n\r\n            setFormErrors({\r\n                submit: errorMessage\r\n            });\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const selectCity = (city) => {\r\n        if (ISRAELI_CITIES.includes(city)) {\r\n            setProperty(prev => ({\r\n                ...prev,\r\n                location: city\r\n            }));\r\n            setShowCities(false);\r\n            setFormErrors(prev => ({\r\n                ...prev,\r\n                location: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n                    <Plus className=\"h-5 w-5\" />\r\n                    List New Property\r\n                </h2>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    <div>\r\n                        <Input\r\n                            name=\"id\"\r\n                            placeholder=\"Property ID (letters, numbers, hyphens only)\"\r\n                            value={property.id}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.id ? 'border-red-500' : ''}\r\n                            maxLength={50}\r\n                        />\r\n                        {formErrors.id && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.id}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"border-2 border-dashed rounded-lg p-4 text-center hover:bg-gray-50 transition-colors\">\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleImageChange}\r\n                                className=\"hidden\"\r\n                                id=\"property-image\"\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"property-image\"\r\n                                className=\"cursor-pointer flex flex-col items-center\"\r\n                            >\r\n                                {imagePreview ? (\r\n                                    <img\r\n                                        src={imagePreview}\r\n                                        alt=\"Property preview\"\r\n                                        className=\"max-h-48 object-contain mb-2 rounded-lg\"\r\n                                    />\r\n                                ) : (\r\n                                    <ImageIcon className=\"h-12 w-12 text-gray-400 mb-2\" />\r\n                                )}\r\n                                <span className=\"text-sm text-gray-600\">\r\n                                    {imagePreview ? 'Change image' : 'Upload property image (max 5MB)'}\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        {formErrors.image && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.image}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Input\r\n                            name=\"title\"\r\n                            placeholder=\"Property Title\"\r\n                            value={property.title}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.title ? 'border-red-500' : ''}\r\n                            maxLength={100}\r\n                        />\r\n                        {formErrors.title && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.title}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Textarea\r\n                            name=\"description\"\r\n                            placeholder=\"Property Description (4 lines maximum)\"\r\n                            value={property.description}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={`min-h-[100px] resize-none ${formErrors.description ? 'border-red-500' : ''}`}\r\n                            rows={4}\r\n                            maxLength={400}\r\n                            onKeyDown={(e) => {\r\n                                const lines = e.target.value.split('\\n');\r\n                                if (e.key === 'Enter' && lines.length >= 4) {\r\n                                    e.preventDefault();\r\n                                }\r\n                            }}\r\n                        />\r\n                        {formErrors.description && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.description}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"relative\">\r\n                        <div\r\n                            className=\"relative cursor-pointer\"\r\n                            onClick={() => !isProcessing && setShowCities(!showCities)}\r\n                        >\r\n                            <Input\r\n                                name=\"location\"\r\n                                placeholder=\"Select Location\"\r\n                                value={property.location}\r\n                                readOnly\r\n                                required\r\n                                disabled={isProcessing}\r\n                                className={formErrors.location ? 'border-red-500' : ''}\r\n                            />\r\n                            <ChevronDown className=\"absolute right-3 top-3 h-4 w-4\" />\r\n                        </div>\r\n                        {showCities && (\r\n                            <div className=\"absolute z-10 w-full mt-1 bg-white border rounded-md shadow-lg max-h-60 overflow-auto\">\r\n                                {ISRAELI_CITIES.map((city) => (\r\n                                    <div\r\n                                        key={city}\r\n                                        className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                                        onClick={() => selectCity(city)}\r\n                                    >\r\n                                        {city}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        {formErrors.location && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.location}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Input\r\n                            name=\"price\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            max=\"1000000\"\r\n                            placeholder=\"Price (ETH)\"\r\n                            value={property.price}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={isProcessing}\r\n                            className={formErrors.price ? 'border-red-500' : ''}\r\n                        />\r\n                        {formErrors.price && (\r\n                            <p className=\"text-red-500 text-sm mt-1\">{formErrors.price}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {formErrors.submit && (\r\n                        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\r\n                            {formErrors.submit}\r\n                        </div>\r\n                    )}\r\n\r\n                    <Button \r\n                        type=\"submit\" \r\n                        disabled={isProcessing || !contract}\r\n                        className=\"w-full\"\r\n                    >\r\n                        {isProcessing ? (\r\n                            <div className=\"flex items-center justify-center gap-2\">\r\n                                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                                Processing...\r\n                            </div>\r\n                        ) : 'List Property'}\r\n                    </Button>\r\n                </form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PropertyForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}