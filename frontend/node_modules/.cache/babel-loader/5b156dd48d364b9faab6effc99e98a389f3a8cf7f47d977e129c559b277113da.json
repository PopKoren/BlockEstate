{"ast":null,"code":"import React, { memo } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"../../components/ui/dialog\";\nimport { ScrollArea } from \"../../components/ui/scroll-area\";\nimport { Card } from \"../../components/ui/card\";\nimport { Button } from \"../../components/ui/button\";\nimport { ExternalLink, FileText, Clock, MapPin, DollarSign, User } from 'lucide-react';\n\n// const ContractDetails = memo(({ property, formatPrice }) => {\n//     const PropertyInfo = ({ icon: Icon, label, value }) => (\n//         <div className=\"flex items-start gap-2\">\n//             <Icon className=\"h-4 w-4 mt-1 text-gray-500\" />\n//             <div>\n//                 <p className=\"font-medium\">{label}</p>\n//                 <p className=\"text-sm text-gray-600 break-all\">{value}</p>\n//             </div>\n//         </div>\n//     );\n\n//     return (\n//         <Dialog>\n//             <DialogTrigger asChild>\n//                 <Button variant=\"link\" className=\"text-blue-600 hover:text-blue-800 p-0 h-auto font-normal\">\n//                     <FileText className=\"h-4 w-4 mr-1\" />\n//                     View Details\n//                 </Button>\n//             </DialogTrigger>\n//             <DialogContent className=\"max-w-2xl\">\n//                 <DialogHeader>\n//                     <DialogTitle className=\"text-xl\">{property.title}</DialogTitle>\n//                 </DialogHeader>\n//                 <ScrollArea className=\"max-h-[60vh] overflow-auto\">\n//                     <div className=\"space-y-6 p-4\">\n//                         <Card className=\"p-4\">\n//                             <h3 className=\"font-semibold text-lg mb-4\">Property Information</h3>\n//                             <div className=\"space-y-4\">\n//                                 <PropertyInfo\n//                                     icon={FileText}\n//                                     label=\"Property ID\"\n//                                     value={property.id}\n//                                 />\n//                                 <PropertyInfo\n//                                     icon={MapPin}\n//                                     label=\"Location\"\n//                                     value={property.location}\n//                                 />\n//                                 <PropertyInfo\n//                                     icon={DollarSign}\n//                                     label=\"Price\"\n//                                     value={`${formatPrice(property.price)} ETH`}\n//                                 />\n//                                 <PropertyInfo\n//                                     icon={User}\n//                                     label=\"Owner\"\n//                                     value={property.owner}\n//                                 />\n//                                 <PropertyInfo\n//                                     icon={Clock}\n//                                     label=\"Listed Date\"\n//                                     value={new Date(Number(property.createdAt) * 1000).toLocaleString()}\n//                                 />\n//                             </div>\n//                         </Card>\n\n//                         <Card className=\"p-4\">\n//                             <h3 className=\"font-semibold text-lg mb-4\">Property Description</h3>\n//                             <p className=\"text-gray-600 whitespace-pre-wrap\">{property.description}</p>\n//                         </Card>\n\n//                         {property.documents && property.documents.length > 0 && (\n//                             <Card className=\"p-4\">\n//                                 <h3 className=\"font-semibold text-lg mb-4\">Documents</h3>\n//                                 <ul className=\"space-y-2\">\n//                                     {property.documents.map((doc, index) => (\n//                                         <li key={index} className=\"text-sm text-gray-600\">\n//                                             {doc}\n//                                         </li>\n//                                     ))}\n//                                 </ul>\n//                             </Card>\n//                         )}\n//                     </div>\n//                 </ScrollArea>\n//             </DialogContent>\n//         </Dialog>\n//     );\n// });\n\n// ContractDetails.displayName = 'ContractDetails';\n\n// export default ContractDetails;","map":{"version":3,"names":["React","memo","Dialog","DialogContent","DialogHeader","DialogTitle","DialogTrigger","ScrollArea","Card","Button","ExternalLink","FileText","Clock","MapPin","DollarSign","User"],"sources":["C:/Users/evyatar/Documents/Smart contract/website/BlockEstate/frontend/src/real-estate-package/components/ui/ContractDetails.jsx"],"sourcesContent":["import React, { memo } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogHeader,\r\n    DialogTitle,\r\n    DialogTrigger,\r\n} from \"../../components/ui/dialog\";\r\nimport { ScrollArea } from \"../../components/ui/scroll-area\";\r\nimport { Card } from \"../../components/ui/card\";\r\nimport { Button } from \"../../components/ui/button\";\r\nimport { ExternalLink, FileText, Clock, MapPin, DollarSign, User } from 'lucide-react';\r\n\r\n// const ContractDetails = memo(({ property, formatPrice }) => {\r\n//     const PropertyInfo = ({ icon: Icon, label, value }) => (\r\n//         <div className=\"flex items-start gap-2\">\r\n//             <Icon className=\"h-4 w-4 mt-1 text-gray-500\" />\r\n//             <div>\r\n//                 <p className=\"font-medium\">{label}</p>\r\n//                 <p className=\"text-sm text-gray-600 break-all\">{value}</p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n\r\n//     return (\r\n//         <Dialog>\r\n//             <DialogTrigger asChild>\r\n//                 <Button variant=\"link\" className=\"text-blue-600 hover:text-blue-800 p-0 h-auto font-normal\">\r\n//                     <FileText className=\"h-4 w-4 mr-1\" />\r\n//                     View Details\r\n//                 </Button>\r\n//             </DialogTrigger>\r\n//             <DialogContent className=\"max-w-2xl\">\r\n//                 <DialogHeader>\r\n//                     <DialogTitle className=\"text-xl\">{property.title}</DialogTitle>\r\n//                 </DialogHeader>\r\n//                 <ScrollArea className=\"max-h-[60vh] overflow-auto\">\r\n//                     <div className=\"space-y-6 p-4\">\r\n//                         <Card className=\"p-4\">\r\n//                             <h3 className=\"font-semibold text-lg mb-4\">Property Information</h3>\r\n//                             <div className=\"space-y-4\">\r\n//                                 <PropertyInfo\r\n//                                     icon={FileText}\r\n//                                     label=\"Property ID\"\r\n//                                     value={property.id}\r\n//                                 />\r\n//                                 <PropertyInfo\r\n//                                     icon={MapPin}\r\n//                                     label=\"Location\"\r\n//                                     value={property.location}\r\n//                                 />\r\n//                                 <PropertyInfo\r\n//                                     icon={DollarSign}\r\n//                                     label=\"Price\"\r\n//                                     value={`${formatPrice(property.price)} ETH`}\r\n//                                 />\r\n//                                 <PropertyInfo\r\n//                                     icon={User}\r\n//                                     label=\"Owner\"\r\n//                                     value={property.owner}\r\n//                                 />\r\n//                                 <PropertyInfo\r\n//                                     icon={Clock}\r\n//                                     label=\"Listed Date\"\r\n//                                     value={new Date(Number(property.createdAt) * 1000).toLocaleString()}\r\n//                                 />\r\n//                             </div>\r\n//                         </Card>\r\n\r\n//                         <Card className=\"p-4\">\r\n//                             <h3 className=\"font-semibold text-lg mb-4\">Property Description</h3>\r\n//                             <p className=\"text-gray-600 whitespace-pre-wrap\">{property.description}</p>\r\n//                         </Card>\r\n\r\n//                         {property.documents && property.documents.length > 0 && (\r\n//                             <Card className=\"p-4\">\r\n//                                 <h3 className=\"font-semibold text-lg mb-4\">Documents</h3>\r\n//                                 <ul className=\"space-y-2\">\r\n//                                     {property.documents.map((doc, index) => (\r\n//                                         <li key={index} className=\"text-sm text-gray-600\">\r\n//                                             {doc}\r\n//                                         </li>\r\n//                                     ))}\r\n//                                 </ul>\r\n//                             </Card>\r\n//                         )}\r\n//                     </div>\r\n//                 </ScrollArea>\r\n//             </DialogContent>\r\n//         </Dialog>\r\n//     );\r\n// });\r\n\r\n// ContractDetails.displayName = 'ContractDetails';\r\n\r\n// export default ContractDetails;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SACIC,MAAM,EACNC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,aAAa,QACV,4BAA4B;AACnC,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,QAAQ,cAAc;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}