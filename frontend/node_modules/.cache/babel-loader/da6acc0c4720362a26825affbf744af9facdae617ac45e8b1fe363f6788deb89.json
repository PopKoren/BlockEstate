{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evyatar\\\\Documents\\\\Smart contract\\\\website\\\\BlockEstate\\\\frontend\\\\src\\\\real-estate-package\\\\RealEstateApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardContent } from './components/ui/card';\nimport { Button } from './components/ui/button';\nimport { Input } from './components/ui/input';\nimport { Alert, AlertDescription } from './components/ui/alert';\nimport { Building, Wallet, Plus, RefreshCw, AlertCircle, Loader2, MapPin, DollarSign } from 'lucide-react';\nimport { Textarea } from './components/ui/textarea';\nimport { ScrollArea } from './components/ui/scroll-area';\nimport ContractDetails from './components/ui/ContractDetails';\nimport { initializeWeb3, initializeContract, connectWallet, switchToHardhatNetwork, formatPrice, validatePropertyData } from './utilsApp/web3';\nimport { displayErrorMessage } from './utilsApp/errors';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealEstateApp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [web3Instance, setWeb3Instance] = useState(null);\n  const [properties, setProperties] = useState([]);\n  const [error, setError] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState('Initializing...');\n  const [newProperty, setNewProperty] = useState({\n    id: '',\n    title: '',\n    description: '',\n    location: '',\n    price: '',\n    documents: []\n  });\n  const loadProperties = async (contractInstance = contract) => {\n    try {\n      if (!contractInstance) throw new Error('Contract not initialized');\n      const results = await contractInstance.methods.getAllProperties().call();\n      setProperties(results || []);\n    } catch (err) {\n      setError(displayErrorMessage(err, 'Failed to load properties'));\n    }\n  };\n  const handleAccountChange = async accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      await loadProperties(contract);\n    } else {\n      setAccount('');\n      setProperties([]);\n      setError('Please connect your wallet');\n    }\n  };\n  const handleChainChange = () => {\n    window.location.reload();\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProperty(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsProcessing(true);\n    setError('');\n    try {\n      if (!contract || !account || !web3Instance) {\n        throw new Error('Please ensure your wallet is connected');\n      }\n      validatePropertyData(newProperty);\n      const priceInWei = web3Instance.utils.toWei(newProperty.price, 'ether');\n      await contract.methods.createProperty(newProperty.id, newProperty.title, newProperty.description, priceInWei, newProperty.location, []).send({\n        from: account,\n        gas: 500000\n      });\n      await loadProperties();\n      setNewProperty({\n        id: '',\n        title: '',\n        description: '',\n        location: '',\n        price: '',\n        documents: []\n      });\n    } catch (err) {\n      setError(displayErrorMessage(err, 'Property Creation Error'));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // const handlePurchase = async (propertyId) => {\n  //     setIsProcessing(true);\n  //     setError('');\n\n  //     try {\n  //     // Validate connection and requirements\n  //     if (!contract || !account || !web3Instance) {\n  //         throw new Error('Please ensure your wallet is connected');\n  //     }\n\n  //     // Find the property\n  //     const property = properties.find(p => p.id === propertyId);\n  //     if (!property) {\n  //         throw new Error('Property not found');\n  //     }\n\n  //     // Verify user has sufficient balance\n  //     const balance = await web3Instance.eth.getBalance(account);\n  //     if (BigInt(balance) < BigInt(property.price)) {\n  //         throw new Error('Insufficient funds to complete the purchase');\n  //     }\n\n  //     const contractId = `${propertyId}-${Date.now()}`;\n\n  //     // Get gas estimation with try-catch\n  //     let gasEstimate;\n  //     try {\n  //         gasEstimate = await contract.methods\n  //             .createContract(contractId, propertyId)\n  //             .estimateGas({\n  //                 from: account,\n  //                 value: property.price\n  //             });\n  //     } catch (gasError) {\n  //         console.error('Gas estimation error:', gasError);\n  //         // Check for specific error messages\n  //         if (gasError.message.includes('Property must be verified')) {\n  //             throw new Error('This property must be verified before purchase');\n  //         }\n  //         throw new Error('Failed to estimate gas. The transaction may fail.');\n  //     }\n\n  //     // Get current gas price\n  //     const gasPrice = await web3Instance.eth.getGasPrice();\n\n  //     // Add 20% buffer to gas estimate\n  //     const gasLimit = Math.ceil(gasEstimate * 1.2);\n\n  //     // Execute the transaction with specific parameters\n  //     const transaction = await contract.methods\n  //         .createContract(contractId, propertyId)\n  //         .send({\n  //             from: account,\n  //             value: property.price,\n  //             gas: gasLimit,\n  //             gasPrice: gasPrice,\n  //             maxFeePerGas: null, // Let MetaMask handle this\n  //             maxPriorityFeePerGas: null // Let MetaMask handle this\n  //         });\n\n  //     // Wait for transaction receipt\n  //     const receipt = await web3Instance.eth.getTransactionReceipt(transaction.transactionHash);\n\n  //     if (!receipt.status) {\n  //         throw new Error('Transaction failed. Please check the transaction on block explorer.');\n  //     }\n\n  //     // Reload properties and show success\n  //     await loadProperties();\n  //     setError('Purchase completed successfully!');\n\n  //   } catch (err) {\n  //     console.error('Purchase error:', err);\n\n  //     // Handle specific error cases\n  //     if (err.message.includes('User denied transaction')) {\n  //         setError('Transaction was cancelled by user');\n  //     } else if (err.message.includes('insufficient funds')) {\n  //         setError('Insufficient funds to complete the purchase');\n  //     } else if (err.message.includes('Property must be verified')) {\n  //         setError('This property must be verified before purchase. Please contact the administrator.');\n  //     } else {\n  //         setError(`Failed to purchase property: ${err.message}`);\n  //     }\n  //   } finally {\n  //     setIsProcessing(false);\n  //   }\n  // };\n  const handlePurchase = async propertyId => {\n    setIsProcessing(true);\n    setError('');\n    try {\n      if (!contract || !account) {\n        throw new Error('Please connect your wallet first');\n      }\n      const property = properties.find(p => p.id === propertyId);\n      if (!property) {\n        throw new Error('Property not found');\n      }\n\n      // Check if property is active\n      if (!property.isActive) {\n        throw new Error('Property is not available for purchase');\n      }\n\n      // Check if sender is not the owner\n      if (property.owner.toLowerCase() === account.toLowerCase()) {\n        throw new Error('You cannot purchase your own property');\n      }\n      const contractId = `${propertyId}-${Date.now()}`;\n\n      // Convert price to string to avoid BigInt issues\n      const propertyPrice = property.price.toString();\n\n      // Log transaction details for debugging\n      console.log('Transaction details:', {\n        contractId,\n        propertyId,\n        price: propertyPrice,\n        from: account\n      });\n      const transaction = await contract.methods.createContract(contractId, propertyId).send({\n        from: account,\n        value: propertyPrice,\n        gas: 500000,\n        gasPrice: await web3Instance.eth.getGasPrice()\n      });\n      console.log('Transaction successful:', transaction);\n      await loadProperties();\n      setError('Purchase completed successfully!');\n    } catch (err) {\n      console.error('Detailed purchase error:', err);\n      if (err.message.includes('insufficient funds')) {\n        setError('You do not have enough funds to complete this purchase');\n      } else if (err.message.includes('Property is not available')) {\n        setError('This property is not available for purchase');\n      } else if (err.message.includes('own property')) {\n        setError('You cannot purchase your own property');\n      } else {\n        setError('Failed to complete purchase. Please check your wallet and try again.');\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const initializeBlockchain = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      setConnectionStatus('Initializing Web3...');\n      const web3 = await initializeWeb3();\n      setWeb3Instance(web3);\n\n      // Get accounts after web3 initialization\n      const accounts = await web3.eth.getAccounts();\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n      }\n      setConnectionStatus('Checking network...');\n      const chainId = await web3.eth.getChainId();\n      if (chainId !== 31337) {\n        setConnectionStatus('Switching to Hardhat network...');\n        await switchToHardhatNetwork();\n      }\n      setConnectionStatus('Initializing contract...');\n      const contractInstance = await initializeContract(web3);\n      setContract(contractInstance);\n      await loadProperties(contractInstance);\n      setConnectionStatus('Connected');\n    } catch (err) {\n      console.error('Initialization error:', err);\n      setError(displayErrorMessage(err, 'Initialization Error'));\n      setConnectionStatus('Connection failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      await initializeBlockchain();\n      if (window.ethereum) {\n        window.ethereum.on('chainChanged', () => {\n          window.location.reload();\n        });\n        window.ethereum.on('accountsChanged', handleAccountChange);\n      }\n    };\n    init();\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountChange);\n        window.ethereum.removeListener('chainChanged', handleChainChange);\n      }\n    };\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Loader2, {\n          className: \"h-8 w-8 animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Connecting to Blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this);\n  }\n\n  //     return (\n  //         <div className=\"min-h-screen bg-gray-50\">\n  //             <div className=\"container mx-auto p-4\">\n  //                 <div className=\"grid gap-6\">\n  //                     <Card>\n  //                         <CardHeader>\n  //                             <div className=\"flex justify-between items-center\">\n  //                                 <div className=\"flex items-center space-x-2\">\n  //                                     <Building className=\"h-6 w-6\" />\n  //                                     <h1 className=\"text-2xl font-semibold\">Real Estate DApp</h1>\n  //                                 </div>\n  //                                 <div className=\"flex gap-2\">\n  //                                     <Button \n  //                                         onClick={() => loadProperties()} \n  //                                         disabled={isProcessing}\n  //                                         variant=\"outline\"\n  //                                         className=\"flex items-center gap-2\"\n  //                                     >\n  //                                         <RefreshCw className={`h-4 w-4 ${isProcessing ? 'animate-spin' : ''}`} />\n  //                                         Refresh\n  //                                     </Button>\n  //                                     <Button \n  //                                         onClick={connectWallet}\n  //                                         disabled={isProcessing}\n  //                                         className=\"flex items-center gap-2\"\n  //                                     >\n  //                                         <Wallet className=\"h-4 w-4\" />\n  //                                         {account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Connect Wallet'}\n  //                                     </Button>\n  //                                 </div>\n  //                             </div>\n  //                         </CardHeader>\n  //                     </Card>\n\n  //                     {error && (\n  //                         <Alert variant={error.includes('success') ? 'success' : 'destructive'}>\n  //                             <AlertCircle className=\"h-4 w-4\" />\n  //                             <AlertDescription>{error}</AlertDescription>\n  //                         </Alert>\n  //                     )}\n\n  //                     <div className=\"grid md:grid-cols-2 gap-6\">\n  //                         <Card>\n  //                             <CardHeader>\n  //                                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\n  //                                     <Plus className=\"h-5 w-5\" />\n  //                                     List New Property\n  //                                 </h2>\n  //                             </CardHeader>\n  //                             <CardContent>\n  //                                 <form onSubmit={handleSubmit} className=\"space-y-4\">\n  //                                     <Input\n  //                                         name=\"id\"\n  //                                         placeholder=\"Property ID\"\n  //                                         value={newProperty.id}\n  //                                         onChange={(e) => setNewProperty(prev => ({\n  //                                             ...prev,\n  //                                             id: e.target.value\n  //                                         }))}\n  //                                         required\n  //                                         disabled={isProcessing}\n  //                                     />\n  //                                     <Input\n  //                                         name=\"title\"\n  //                                         placeholder=\"Property Title\"\n  //                                         value={newProperty.title}\n  //                                         onChange={(e) => setNewProperty(prev => ({\n  //                                             ...prev,\n  //                                             title: e.target.value\n  //                                         }))}\n  //                                         required\n  //                                         disabled={isProcessing}\n  //                                     />\n  //                                     <textarea\n  //                                         name=\"description\"\n  //                                         placeholder=\"Property Description\"\n  //                                         value={newProperty.description}\n  //                                         onChange={(e) => setNewProperty(prev => ({\n  //                                             ...prev,\n  //                                             description: e.target.value\n  //                                         }))}\n  //                                         required\n  //                                         disabled={isProcessing}\n  //                                         className=\"w-full min-h-[100px] p-3 rounded-lg border border-gray-200 \n  //                                                  focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n  //                                     />\n  //                                     <div className=\"grid grid-cols-2 gap-4\">\n  //                                         <Input\n  //                                             name=\"location\"\n  //                                             placeholder=\"Location\"\n  //                                             value={newProperty.location}\n  //                                             onChange={(e) => setNewProperty(prev => ({\n  //                                                 ...prev,\n  //                                                 location: e.target.value\n  //                                             }))}\n  //                                             required\n  //                                             disabled={isProcessing}\n  //                                         />\n  //                                         <Input\n  //                                             name=\"price\"\n  //                                             type=\"number\"\n  //                                             step=\"0.01\"\n  //                                             placeholder=\"Price (ETH)\"\n  //                                             value={newProperty.price}\n  //                                             onChange={(e) => setNewProperty(prev => ({\n  //                                                 ...prev,\n  //                                                 price: e.target.value\n  //                                             }))}\n  //                                             required\n  //                                             disabled={isProcessing}\n  //                                         />\n  //                                     </div>\n  //                                     <Button \n  //                                         type=\"submit\" \n  //                                         disabled={isProcessing || !contract}\n  //                                         className=\"w-full\"\n  //                                     >\n  //                                         {isProcessing ? (\n  //                                             <div className=\"flex items-center justify-center gap-2\">\n  //                                                 <Loader2 className=\"h-4 w-4 animate-spin\" />\n  //                                                 Processing...\n  //                                             </div>\n  //                                         ) : 'List Property'}\n  //                                     </Button>\n  //                                 </form>\n  //                             </CardContent>\n  //                         </Card>\n\n  //                         <Card>\n  //                             <CardHeader>\n  //                                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\n  //                                     <Building className=\"h-5 w-5\" />\n  //                                     Listed Properties\n  //                                 </h2>\n  //                             </CardHeader>\n  //                             <CardContent className=\"p-0\">\n  //                                 <ScrollArea className=\"h-[calc(100vh-16rem)]\">\n  //                                     <div className=\"space-y-4 p-6\">\n  //                                         {properties.length === 0 ? (\n  //                                             <div className=\"text-center text-gray-500 py-8\">\n  //                                                 <Building className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n  //                                                 <p>No properties listed yet</p>\n  //                                                 <p className=\"text-sm mt-2\">Create your first property listing to get started</p>\n  //                                             </div>\n  //                                         ) : (\n  //                                             properties.map((property, index) => (\n  //                                                 <Card key={index} className=\"p-4\">\n  //                                                     <div className=\"space-y-3\">\n  //                                                         <div className=\"flex justify-between items-start\">\n  //                                                             <h3 className=\"font-semibold text-lg\">{property.title}</h3>\n  //                                                             <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n  //                                                                 property.isActive \n  //                                                                     ? 'bg-green-100 text-green-700'\n  //                                                                     : 'bg-red-100 text-red-700'\n  //                                                             }`}>\n  //                                                                 {property.isActive ? 'Active' : 'Sold'}\n  //                                                             </span>\n  //                                                         </div>\n\n  //                                                         <p className=\"text-gray-600\">{property.description}</p>\n\n  //                                                         <div className=\"grid grid-cols-2 gap-4\">\n  //                                                             <div className=\"flex items-center gap-2\">\n  //                                                                 <MapPin className=\"h-4 w-4 text-gray-400\" />\n  //                                                                 <span>{property.location}</span>\n  //                                                             </div>\n  //                                                             <div className=\"flex items-center gap-2\">\n  //                                                                 <DollarSign className=\"h-4 w-4 text-gray-400\" />\n  //                                                                 <span>{formatPrice(web3Instance, property.price)} ETH</span>\n  //                                                             </div>\n  //                                                         </div>\n\n  //                                                         <div className=\"flex justify-between items-center pt-4\">\n  //                                                             <ContractDetails \n  //                                                                 property={property}\n  //                                                                 formatPrice={(price) => formatPrice(web3Instance, price)}\n  //                                                             />\n\n  //                                                             {property.isActive && \n  //                                                              property.owner.toLowerCase() !== account.toLowerCase() && (\n  //                                                                 <Button \n  //                                                                     onClick={() => handlePurchase(property.id)}\n  //                                                                     disabled={isProcessing}\n  //                                                                     variant=\"outline\"\n  //                                                                 >\n  //                                                                     {isProcessing ? (\n  //                                                                         <div className=\"flex items-center gap-2\">\n  //                                                                             <Loader2 className=\"h-4 w-4 animate-spin\" />\n  //                                                                             Processing...\n  //                                                                         </div>\n  //                                                                     ) : 'Purchase'}\n  //                                                                 </Button>\n  //                                                             )}\n  //                                                         </div>\n  //                                                     </div>\n  //                                                 </Card>\n  //                                             ))\n  //                                         )}\n  //                                     </div>\n  //                                 </ScrollArea>\n  //                             </CardContent>\n  //                         </Card>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     );\n  // };\n  // export default RealEstateApp;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            children: \"Real Estate DApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => loadProperties(),\n              disabled: !contract || isProcessing,\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                className: `h-4 w-4 ${isProcessing ? 'animate-spin' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 33\n              }, this), \"Refresh\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button\n            //onClick={connectWallet}\n            , {\n              onClick: async () => {\n                try {\n                  const {\n                    address,\n                    web3Instance\n                  } = await connectWallet();\n                  setAccount(address);\n                  setWeb3Instance(web3Instance);\n                  await loadProperties(contract);\n                } catch (err) {\n                  setError(err.message);\n                }\n              }\n\n              ///////\n              ,\n              disabled: isProcessing,\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Wallet, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 33\n              }, this), account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Connect Wallet']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"destructive\",\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n        className: \"ml-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this), \"List New Property\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"id\",\n              placeholder: \"Property ID\",\n              value: newProperty.id,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"title\",\n              placeholder: \"Property Title\",\n              value: newProperty.title,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              name: \"description\",\n              placeholder: \"Property Description\",\n              value: newProperty.description,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isProcessing,\n              className: \"min-h-[100px]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"location\",\n              placeholder: \"Location\",\n              value: newProperty.location,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"price\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Price (ETH)\",\n              value: newProperty.price,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isProcessing || !contract,\n              className: \"w-full\",\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  className: \"h-4 w-4 animate-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 41\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 37\n              }, this) : 'List Property'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"h-[calc(100vh-12rem)]\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Building, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 29\n            }, this), \"Listed Properties\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-0\",\n          children: /*#__PURE__*/_jsxDEV(ScrollArea, {\n            className: \"h-[calc(100vh-16rem)]\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4 p-6\",\n              children: properties.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center text-gray-500 py-8\",\n                children: [/*#__PURE__*/_jsxDEV(Building, {\n                  className: \"h-12 w-12 mx-auto mb-4 opacity-50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No properties listed yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm mt-2\",\n                  children: \"Create your first property listing to get started\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 37\n              }, this) : properties.map((property, index) => /*#__PURE__*/_jsxDEV(Card, {\n                className: \"p-4 hover:shadow-lg transition-shadow duration-200\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-start\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold text-lg\",\n                      children: property.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 rounded-full text-xs font-medium ${property.isActive ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`,\n                      children: property.isActive ? 'Active' : 'Sold'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm space-y-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-600 italic\",\n                      children: property.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-2 gap-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-600\",\n                          children: \"Location\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 707,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: property.location\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 708,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 706,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-medium text-gray-600\",\n                          children: \"Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [formatPrice(web3Instance, property.price), \" ETH\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 712,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 710,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"font-medium text-gray-600\",\n                        children: \"Owner\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 718,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"truncate text-xs\",\n                        children: property.owner\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 719,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center pt-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-xs text-gray-500\",\n                        children: [\"Listed: \", new Date(Number(property.createdAt) * 1000).toLocaleDateString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(ContractDetails, {\n                        property: property,\n                        formatPrice: price => formatPrice(web3Instance, price)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 49\n                  }, this), property.isActive && property.owner.toLowerCase() !== account.toLowerCase() && /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handlePurchase(property.id),\n                    disabled: isProcessing,\n                    className: \"w-full mt-4\",\n                    variant: \"outline\",\n                    children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-center gap-2\",\n                      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                        className: \"h-4 w-4 animate-spin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 745,\n                        columnNumber: 65\n                      }, this), \"Processing Purchase...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 61\n                    }, this) : 'Purchase Property'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 9\n  }, this);\n};\n_s(RealEstateApp, \"tnS3LYkBCWhpUbz+61DTeS9d2JE=\");\n_c = RealEstateApp;\nexport { RealEstateApp }; // Named export\nexport default RealEstateApp;\nvar _c;\n$RefreshReg$(_c, \"RealEstateApp\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardContent","Button","Input","Alert","AlertDescription","Building","Wallet","Plus","RefreshCw","AlertCircle","Loader2","MapPin","DollarSign","Textarea","ScrollArea","ContractDetails","initializeWeb3","initializeContract","connectWallet","switchToHardhatNetwork","formatPrice","validatePropertyData","displayErrorMessage","jsxDEV","_jsxDEV","RealEstateApp","_s","isLoading","setIsLoading","isProcessing","setIsProcessing","account","setAccount","contract","setContract","web3Instance","setWeb3Instance","properties","setProperties","error","setError","connectionStatus","setConnectionStatus","newProperty","setNewProperty","id","title","description","location","price","documents","loadProperties","contractInstance","Error","results","methods","getAllProperties","call","err","handleAccountChange","accounts","length","handleChainChange","window","reload","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","priceInWei","utils","toWei","createProperty","send","from","gas","handlePurchase","propertyId","property","find","p","isActive","owner","toLowerCase","contractId","Date","now","propertyPrice","toString","console","log","transaction","createContract","gasPrice","eth","getGasPrice","message","includes","initializeBlockchain","web3","getAccounts","chainId","getChainId","init","ethereum","on","removeListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","address","slice","variant","onSubmit","placeholder","onChange","required","type","step","map","index","Number","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/evyatar/Documents/Smart contract/website/BlockEstate/frontend/src/real-estate-package/RealEstateApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardContent } from './components/ui/card';\r\nimport { Button } from './components/ui/button';\r\nimport { Input } from './components/ui/input';\r\nimport { Alert, AlertDescription } from './components/ui/alert';\r\nimport { Building, Wallet, Plus, RefreshCw, AlertCircle, Loader2  ,MapPin, DollarSign} from 'lucide-react';\r\nimport { Textarea } from './components/ui/textarea';\r\nimport { ScrollArea } from './components/ui/scroll-area';\r\nimport ContractDetails from './components/ui/ContractDetails';\r\nimport { initializeWeb3, initializeContract, connectWallet, switchToHardhatNetwork, formatPrice, validatePropertyData } from './utilsApp/web3';\r\nimport { displayErrorMessage } from './utilsApp/errors';\r\nimport './styles.css';\r\n\r\nconst RealEstateApp = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [contract, setContract] = useState(null);\r\n    const [web3Instance, setWeb3Instance] = useState(null);\r\n    const [properties, setProperties] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [connectionStatus, setConnectionStatus] = useState('Initializing...');\r\n    const [newProperty, setNewProperty] = useState({\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        location: '',\r\n        price: '',\r\n        documents: []\r\n    });\r\n\r\n    const loadProperties = async (contractInstance = contract) => {\r\n        try {\r\n            if (!contractInstance) throw new Error('Contract not initialized');\r\n            const results = await contractInstance.methods.getAllProperties().call();\r\n            setProperties(results || []);\r\n        } catch (err) {\r\n            setError(displayErrorMessage(err, 'Failed to load properties'));\r\n        }\r\n    };\r\n\r\n    const handleAccountChange = async (accounts) => {\r\n        if (accounts.length > 0) {\r\n            setAccount(accounts[0]);\r\n            await loadProperties(contract);\r\n        } else {\r\n            setAccount('');\r\n            setProperties([]);\r\n            setError('Please connect your wallet');\r\n        }\r\n    };\r\n\r\n    const handleChainChange = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewProperty(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n   \r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsProcessing(true);\r\n        setError('');\r\n\r\n        try {\r\n            if (!contract || !account || !web3Instance) {\r\n                throw new Error('Please ensure your wallet is connected');\r\n            }\r\n\r\n            validatePropertyData(newProperty);\r\n            const priceInWei = web3Instance.utils.toWei(newProperty.price, 'ether');\r\n\r\n            await contract.methods.createProperty(\r\n                newProperty.id,\r\n                newProperty.title,\r\n                newProperty.description,\r\n                priceInWei,\r\n                newProperty.location,\r\n                []\r\n            ).send({\r\n                from: account,\r\n                gas: 500000\r\n            });\r\n\r\n            await loadProperties();\r\n            setNewProperty({\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                location: '',\r\n                price: '',\r\n                documents: []\r\n            });\r\n        } catch (err) {\r\n            setError(displayErrorMessage(err, 'Property Creation Error'));\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n\r\n    // const handlePurchase = async (propertyId) => {\r\n    //     setIsProcessing(true);\r\n    //     setError('');\r\n\r\n    //     try {\r\n    //     // Validate connection and requirements\r\n    //     if (!contract || !account || !web3Instance) {\r\n    //         throw new Error('Please ensure your wallet is connected');\r\n    //     }\r\n\r\n    //     // Find the property\r\n    //     const property = properties.find(p => p.id === propertyId);\r\n    //     if (!property) {\r\n    //         throw new Error('Property not found');\r\n    //     }\r\n\r\n    //     // Verify user has sufficient balance\r\n    //     const balance = await web3Instance.eth.getBalance(account);\r\n    //     if (BigInt(balance) < BigInt(property.price)) {\r\n    //         throw new Error('Insufficient funds to complete the purchase');\r\n    //     }\r\n\r\n    //     const contractId = `${propertyId}-${Date.now()}`;\r\n\r\n    //     // Get gas estimation with try-catch\r\n    //     let gasEstimate;\r\n    //     try {\r\n    //         gasEstimate = await contract.methods\r\n    //             .createContract(contractId, propertyId)\r\n    //             .estimateGas({\r\n    //                 from: account,\r\n    //                 value: property.price\r\n    //             });\r\n    //     } catch (gasError) {\r\n    //         console.error('Gas estimation error:', gasError);\r\n    //         // Check for specific error messages\r\n    //         if (gasError.message.includes('Property must be verified')) {\r\n    //             throw new Error('This property must be verified before purchase');\r\n    //         }\r\n    //         throw new Error('Failed to estimate gas. The transaction may fail.');\r\n    //     }\r\n\r\n    //     // Get current gas price\r\n    //     const gasPrice = await web3Instance.eth.getGasPrice();\r\n        \r\n    //     // Add 20% buffer to gas estimate\r\n    //     const gasLimit = Math.ceil(gasEstimate * 1.2);\r\n\r\n    //     // Execute the transaction with specific parameters\r\n    //     const transaction = await contract.methods\r\n    //         .createContract(contractId, propertyId)\r\n    //         .send({\r\n    //             from: account,\r\n    //             value: property.price,\r\n    //             gas: gasLimit,\r\n    //             gasPrice: gasPrice,\r\n    //             maxFeePerGas: null, // Let MetaMask handle this\r\n    //             maxPriorityFeePerGas: null // Let MetaMask handle this\r\n    //         });\r\n\r\n    //     // Wait for transaction receipt\r\n    //     const receipt = await web3Instance.eth.getTransactionReceipt(transaction.transactionHash);\r\n        \r\n    //     if (!receipt.status) {\r\n    //         throw new Error('Transaction failed. Please check the transaction on block explorer.');\r\n    //     }\r\n\r\n    //     // Reload properties and show success\r\n    //     await loadProperties();\r\n    //     setError('Purchase completed successfully!');\r\n        \r\n    //   } catch (err) {\r\n    //     console.error('Purchase error:', err);\r\n        \r\n    //     // Handle specific error cases\r\n    //     if (err.message.includes('User denied transaction')) {\r\n    //         setError('Transaction was cancelled by user');\r\n    //     } else if (err.message.includes('insufficient funds')) {\r\n    //         setError('Insufficient funds to complete the purchase');\r\n    //     } else if (err.message.includes('Property must be verified')) {\r\n    //         setError('This property must be verified before purchase. Please contact the administrator.');\r\n    //     } else {\r\n    //         setError(`Failed to purchase property: ${err.message}`);\r\n    //     }\r\n    //   } finally {\r\n    //     setIsProcessing(false);\r\n    //   }\r\n    // };\r\n    const handlePurchase = async (propertyId) => {\r\n        setIsProcessing(true);\r\n        setError('');\r\n    \r\n        try {\r\n            if (!contract || !account) {\r\n                throw new Error('Please connect your wallet first');\r\n            }\r\n    \r\n            const property = properties.find(p => p.id === propertyId);\r\n            if (!property) {\r\n                throw new Error('Property not found');\r\n            }\r\n    \r\n            // Check if property is active\r\n            if (!property.isActive) {\r\n                throw new Error('Property is not available for purchase');\r\n            }\r\n    \r\n            // Check if sender is not the owner\r\n            if (property.owner.toLowerCase() === account.toLowerCase()) {\r\n                throw new Error('You cannot purchase your own property');\r\n            }\r\n    \r\n            const contractId = `${propertyId}-${Date.now()}`;\r\n    \r\n            // Convert price to string to avoid BigInt issues\r\n            const propertyPrice = property.price.toString();\r\n            \r\n            // Log transaction details for debugging\r\n            console.log('Transaction details:', {\r\n                contractId,\r\n                propertyId,\r\n                price: propertyPrice,\r\n                from: account\r\n            });\r\n    \r\n            const transaction = await contract.methods\r\n                .createContract(contractId, propertyId)\r\n                .send({\r\n                    from: account,\r\n                    value: propertyPrice,\r\n                    gas: 500000,\r\n                    gasPrice: await web3Instance.eth.getGasPrice()\r\n                });\r\n    \r\n            console.log('Transaction successful:', transaction);\r\n            await loadProperties();\r\n            setError('Purchase completed successfully!');\r\n            \r\n        } catch (err) {\r\n            console.error('Detailed purchase error:', err);\r\n            if (err.message.includes('insufficient funds')) {\r\n                setError('You do not have enough funds to complete this purchase');\r\n            } else if (err.message.includes('Property is not available')) {\r\n                setError('This property is not available for purchase');\r\n            } else if (err.message.includes('own property')) {\r\n                setError('You cannot purchase your own property');\r\n            } else {\r\n                setError('Failed to complete purchase. Please check your wallet and try again.');\r\n            }\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n   \r\n\r\n\r\n\r\n    const initializeBlockchain = async () => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        \r\n        try {\r\n            setConnectionStatus('Initializing Web3...');\r\n            const web3 = await initializeWeb3();\r\n            setWeb3Instance(web3);\r\n    \r\n            // Get accounts after web3 initialization\r\n            const accounts = await web3.eth.getAccounts();\r\n            if (accounts.length > 0) {\r\n                setAccount(accounts[0]);\r\n            }\r\n    \r\n            setConnectionStatus('Checking network...');\r\n            const chainId = await web3.eth.getChainId();\r\n            \r\n            if (chainId !== 31337) {\r\n                setConnectionStatus('Switching to Hardhat network...');\r\n                await switchToHardhatNetwork();\r\n            }\r\n    \r\n            setConnectionStatus('Initializing contract...');\r\n            const contractInstance = await initializeContract(web3);\r\n            setContract(contractInstance);\r\n            \r\n            await loadProperties(contractInstance);\r\n            setConnectionStatus('Connected');\r\n            \r\n        } catch (err) {\r\n            console.error('Initialization error:', err);\r\n            setError(displayErrorMessage(err, 'Initialization Error'));\r\n            setConnectionStatus('Connection failed');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            await initializeBlockchain();\r\n            if (window.ethereum) {\r\n                window.ethereum.on('chainChanged', () => {\r\n                    window.location.reload();\r\n                });\r\n                \r\n                window.ethereum.on('accountsChanged', handleAccountChange);\r\n            }\r\n        };\r\n        init();\r\n        \r\n        return () => {\r\n            if (window.ethereum) {\r\n                window.ethereum.removeListener('accountsChanged', handleAccountChange);\r\n                window.ethereum.removeListener('chainChanged', handleChainChange);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"container mx-auto p-4 min-h-screen flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Connecting to Blockchain</h2>\r\n                    <p className=\"text-gray-600\">{connectionStatus}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-50\">\r\n//             <div className=\"container mx-auto p-4\">\r\n//                 <div className=\"grid gap-6\">\r\n//                     <Card>\r\n//                         <CardHeader>\r\n//                             <div className=\"flex justify-between items-center\">\r\n//                                 <div className=\"flex items-center space-x-2\">\r\n//                                     <Building className=\"h-6 w-6\" />\r\n//                                     <h1 className=\"text-2xl font-semibold\">Real Estate DApp</h1>\r\n//                                 </div>\r\n//                                 <div className=\"flex gap-2\">\r\n//                                     <Button \r\n//                                         onClick={() => loadProperties()} \r\n//                                         disabled={isProcessing}\r\n//                                         variant=\"outline\"\r\n//                                         className=\"flex items-center gap-2\"\r\n//                                     >\r\n//                                         <RefreshCw className={`h-4 w-4 ${isProcessing ? 'animate-spin' : ''}`} />\r\n//                                         Refresh\r\n//                                     </Button>\r\n//                                     <Button \r\n//                                         onClick={connectWallet}\r\n//                                         disabled={isProcessing}\r\n//                                         className=\"flex items-center gap-2\"\r\n//                                     >\r\n//                                         <Wallet className=\"h-4 w-4\" />\r\n//                                         {account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Connect Wallet'}\r\n//                                     </Button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </CardHeader>\r\n//                     </Card>\r\n\r\n//                     {error && (\r\n//                         <Alert variant={error.includes('success') ? 'success' : 'destructive'}>\r\n//                             <AlertCircle className=\"h-4 w-4\" />\r\n//                             <AlertDescription>{error}</AlertDescription>\r\n//                         </Alert>\r\n//                     )}\r\n\r\n//                     <div className=\"grid md:grid-cols-2 gap-6\">\r\n//                         <Card>\r\n//                             <CardHeader>\r\n//                                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n//                                     <Plus className=\"h-5 w-5\" />\r\n//                                     List New Property\r\n//                                 </h2>\r\n//                             </CardHeader>\r\n//                             <CardContent>\r\n//                                 <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//                                     <Input\r\n//                                         name=\"id\"\r\n//                                         placeholder=\"Property ID\"\r\n//                                         value={newProperty.id}\r\n//                                         onChange={(e) => setNewProperty(prev => ({\r\n//                                             ...prev,\r\n//                                             id: e.target.value\r\n//                                         }))}\r\n//                                         required\r\n//                                         disabled={isProcessing}\r\n//                                     />\r\n//                                     <Input\r\n//                                         name=\"title\"\r\n//                                         placeholder=\"Property Title\"\r\n//                                         value={newProperty.title}\r\n//                                         onChange={(e) => setNewProperty(prev => ({\r\n//                                             ...prev,\r\n//                                             title: e.target.value\r\n//                                         }))}\r\n//                                         required\r\n//                                         disabled={isProcessing}\r\n//                                     />\r\n//                                     <textarea\r\n//                                         name=\"description\"\r\n//                                         placeholder=\"Property Description\"\r\n//                                         value={newProperty.description}\r\n//                                         onChange={(e) => setNewProperty(prev => ({\r\n//                                             ...prev,\r\n//                                             description: e.target.value\r\n//                                         }))}\r\n//                                         required\r\n//                                         disabled={isProcessing}\r\n//                                         className=\"w-full min-h-[100px] p-3 rounded-lg border border-gray-200 \r\n//                                                  focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//                                     />\r\n//                                     <div className=\"grid grid-cols-2 gap-4\">\r\n//                                         <Input\r\n//                                             name=\"location\"\r\n//                                             placeholder=\"Location\"\r\n//                                             value={newProperty.location}\r\n//                                             onChange={(e) => setNewProperty(prev => ({\r\n//                                                 ...prev,\r\n//                                                 location: e.target.value\r\n//                                             }))}\r\n//                                             required\r\n//                                             disabled={isProcessing}\r\n//                                         />\r\n//                                         <Input\r\n//                                             name=\"price\"\r\n//                                             type=\"number\"\r\n//                                             step=\"0.01\"\r\n//                                             placeholder=\"Price (ETH)\"\r\n//                                             value={newProperty.price}\r\n//                                             onChange={(e) => setNewProperty(prev => ({\r\n//                                                 ...prev,\r\n//                                                 price: e.target.value\r\n//                                             }))}\r\n//                                             required\r\n//                                             disabled={isProcessing}\r\n//                                         />\r\n//                                     </div>\r\n//                                     <Button \r\n//                                         type=\"submit\" \r\n//                                         disabled={isProcessing || !contract}\r\n//                                         className=\"w-full\"\r\n//                                     >\r\n//                                         {isProcessing ? (\r\n//                                             <div className=\"flex items-center justify-center gap-2\">\r\n//                                                 <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n//                                                 Processing...\r\n//                                             </div>\r\n//                                         ) : 'List Property'}\r\n//                                     </Button>\r\n//                                 </form>\r\n//                             </CardContent>\r\n//                         </Card>\r\n\r\n//                         <Card>\r\n//                             <CardHeader>\r\n//                                 <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n//                                     <Building className=\"h-5 w-5\" />\r\n//                                     Listed Properties\r\n//                                 </h2>\r\n//                             </CardHeader>\r\n//                             <CardContent className=\"p-0\">\r\n//                                 <ScrollArea className=\"h-[calc(100vh-16rem)]\">\r\n//                                     <div className=\"space-y-4 p-6\">\r\n//                                         {properties.length === 0 ? (\r\n//                                             <div className=\"text-center text-gray-500 py-8\">\r\n//                                                 <Building className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n//                                                 <p>No properties listed yet</p>\r\n//                                                 <p className=\"text-sm mt-2\">Create your first property listing to get started</p>\r\n//                                             </div>\r\n//                                         ) : (\r\n//                                             properties.map((property, index) => (\r\n//                                                 <Card key={index} className=\"p-4\">\r\n//                                                     <div className=\"space-y-3\">\r\n//                                                         <div className=\"flex justify-between items-start\">\r\n//                                                             <h3 className=\"font-semibold text-lg\">{property.title}</h3>\r\n//                                                             <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n//                                                                 property.isActive \r\n//                                                                     ? 'bg-green-100 text-green-700'\r\n//                                                                     : 'bg-red-100 text-red-700'\r\n//                                                             }`}>\r\n//                                                                 {property.isActive ? 'Active' : 'Sold'}\r\n//                                                             </span>\r\n//                                                         </div>\r\n                                                        \r\n//                                                         <p className=\"text-gray-600\">{property.description}</p>\r\n                                                        \r\n//                                                         <div className=\"grid grid-cols-2 gap-4\">\r\n//                                                             <div className=\"flex items-center gap-2\">\r\n//                                                                 <MapPin className=\"h-4 w-4 text-gray-400\" />\r\n//                                                                 <span>{property.location}</span>\r\n//                                                             </div>\r\n//                                                             <div className=\"flex items-center gap-2\">\r\n//                                                                 <DollarSign className=\"h-4 w-4 text-gray-400\" />\r\n//                                                                 <span>{formatPrice(web3Instance, property.price)} ETH</span>\r\n//                                                             </div>\r\n//                                                         </div>\r\n\r\n//                                                         <div className=\"flex justify-between items-center pt-4\">\r\n//                                                             <ContractDetails \r\n//                                                                 property={property}\r\n//                                                                 formatPrice={(price) => formatPrice(web3Instance, price)}\r\n//                                                             />\r\n                                                            \r\n//                                                             {property.isActive && \r\n//                                                              property.owner.toLowerCase() !== account.toLowerCase() && (\r\n//                                                                 <Button \r\n//                                                                     onClick={() => handlePurchase(property.id)}\r\n//                                                                     disabled={isProcessing}\r\n//                                                                     variant=\"outline\"\r\n//                                                                 >\r\n//                                                                     {isProcessing ? (\r\n//                                                                         <div className=\"flex items-center gap-2\">\r\n//                                                                             <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n//                                                                             Processing...\r\n//                                                                         </div>\r\n//                                                                     ) : 'Purchase'}\r\n//                                                                 </Button>\r\n//                                                             )}\r\n//                                                         </div>\r\n//                                                     </div>\r\n//                                                 </Card>\r\n//                                             ))\r\n//                                         )}\r\n//                                     </div>\r\n//                                 </ScrollArea>\r\n//                             </CardContent>\r\n//                         </Card>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default RealEstateApp;\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4 min-h-screen\">\r\n            <Card className=\"mb-6\">\r\n                <CardHeader>\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <h1 className=\"text-2xl font-bold\">Real Estate DApp</h1>\r\n                        <div className=\"flex gap-2\">\r\n                            <Button \r\n                                onClick={() => loadProperties()} \r\n                                disabled={!contract || isProcessing}\r\n                                className=\"flex items-center gap-2\"\r\n                            >\r\n                                <RefreshCw className={`h-4 w-4 ${isProcessing ? 'animate-spin' : ''}`} />\r\n                                Refresh\r\n                            </Button>\r\n                            <Button \r\n                                //onClick={connectWallet}\r\n                                onClick={async () => {\r\n                                    try {\r\n                                        const { address, web3Instance } = await connectWallet();\r\n                                        setAccount(address);\r\n                                        setWeb3Instance(web3Instance);\r\n                                        await loadProperties(contract);\r\n                                    } catch (err) {\r\n                                        setError(err.message);\r\n                                    }\r\n                                }}\r\n\r\n                                ///////\r\n                                disabled={isProcessing}\r\n                                className=\"flex items-center gap-2\"\r\n                            >\r\n                                <Wallet className=\"h-4 w-4\" />\r\n                                {account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Connect Wallet'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </CardHeader>\r\n            </Card>\r\n\r\n            {error && (\r\n                <Alert variant=\"destructive\" className=\"mb-6\">\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    <AlertDescription className=\"ml-2\">{error}</AlertDescription>\r\n                </Alert>\r\n            )}\r\n\r\n            <div className=\"grid md:grid-cols-2 gap-6\">\r\n                <Card>\r\n                    <CardHeader>\r\n                        <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n                            <Plus className=\"h-5 w-5\" />\r\n                            List New Property\r\n                        </h2>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                            <Input\r\n                                name=\"id\"\r\n                                placeholder=\"Property ID\"\r\n                                value={newProperty.id}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Input\r\n                                name=\"title\"\r\n                                placeholder=\"Property Title\"\r\n                                value={newProperty.title}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Textarea\r\n                                name=\"description\"\r\n                                placeholder=\"Property Description\"\r\n                                value={newProperty.description}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                disabled={isProcessing}\r\n                                className=\"min-h-[100px]\"\r\n                            />\r\n                            <Input\r\n                                name=\"location\"\r\n                                placeholder=\"Location\"\r\n                                value={newProperty.location}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Input\r\n                                name=\"price\"\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                placeholder=\"Price (ETH)\"\r\n                                value={newProperty.price}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Button \r\n                                type=\"submit\" \r\n                                disabled={isProcessing || !contract}\r\n                                className=\"w-full\"\r\n                            >\r\n                                {isProcessing ? (\r\n                                    <div className=\"flex items-center justify-center gap-2\">\r\n                                        <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                                        Processing...\r\n                                    </div>\r\n                                ) : 'List Property'}\r\n                            </Button>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"h-[calc(100vh-12rem)]\">\r\n                    <CardHeader>\r\n                        <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n                            <Building className=\"h-5 w-5\" />\r\n                            Listed Properties\r\n                        </h2>\r\n                    </CardHeader>\r\n                    <CardContent className=\"p-0\">\r\n                        <ScrollArea className=\"h-[calc(100vh-16rem)]\">\r\n                            <div className=\"space-y-4 p-6\">\r\n                                {properties.length === 0 ? (\r\n                                    <div className=\"text-center text-gray-500 py-8\">\r\n                                        <Building className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                                        <p>No properties listed yet</p>\r\n                                        <p className=\"text-sm mt-2\">Create your first property listing to get started</p>\r\n                                    </div>\r\n                                ) : (\r\n                                    properties.map((property, index) => (\r\n                                        <Card key={index} className=\"p-4 hover:shadow-lg transition-shadow duration-200\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <div className=\"flex justify-between items-start\">\r\n                                                    <h3 className=\"font-semibold text-lg\">{property.title}</h3>\r\n                                                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                                                        property.isActive \r\n                                                            ? 'bg-green-100 text-green-700'\r\n                                                            : 'bg-red-100 text-red-700'\r\n                                                    }`}>\r\n                                                        {property.isActive ? 'Active' : 'Sold'}\r\n                                                    </span>\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"text-sm space-y-2\">\r\n                                                    <p className=\"text-gray-600 italic\">{property.description}</p>\r\n                                                    \r\n                                                    <div className=\"grid grid-cols-2 gap-4\">\r\n                                                        <div>\r\n                                                            <p className=\"font-medium text-gray-600\">Location</p>\r\n                                                            <p>{property.location}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <p className=\"font-medium text-gray-600\">Price</p>\r\n                                                            <p>{formatPrice(web3Instance, property.price)} ETH</p>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div>\r\n                                                        <p className=\"font-medium text-gray-600\">Owner</p>\r\n                                                        <p className=\"truncate text-xs\">{property.owner}</p>\r\n                                                    </div>\r\n                                                    \r\n                                                        \r\n\r\n\r\n                                                    <div className=\"flex justify-between items-center pt-2\">\r\n                                                        <p className=\"text-xs text-gray-500\">\r\n                                                     Listed: {new Date(Number(property.createdAt) * 1000).toLocaleDateString()}\r\n                                                        </p>\r\n                                                          <ContractDetails \r\n                                                          property={property}\r\n                                                          formatPrice={(price) => formatPrice(web3Instance, price)}\r\n                                                           />\r\n                                                      </div>\r\n                                                </div>\r\n\r\n                                                {property.isActive && property.owner.toLowerCase() !== account.toLowerCase() && (\r\n                                                    <Button \r\n                                                        onClick={() => handlePurchase(property.id)}\r\n                                                        disabled={isProcessing}\r\n                                                        className=\"w-full mt-4\"\r\n                                                        variant=\"outline\"\r\n                                                    >\r\n                                                        {isProcessing ? (\r\n                                                            <div className=\"flex items-center justify-center gap-2\">\r\n                                                                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                                                                Processing Purchase...\r\n                                                            </div>\r\n                                                        ) : 'Purchase Property'}\r\n                                                    </Button>\r\n                                                )}\r\n                                            </div>\r\n                                        </Card>\r\n                                    ))\r\n                                )}\r\n                            </div>\r\n                        </ScrollArea>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport { RealEstateApp };  // Named export\r\nexport default RealEstateApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}