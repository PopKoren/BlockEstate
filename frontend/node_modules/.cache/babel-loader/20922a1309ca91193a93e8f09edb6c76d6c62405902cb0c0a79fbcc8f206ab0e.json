{"ast":null,"code":"// src/utils/errors.js\nexport const handleWeb3Error = (error, context = '') => {\n  let errorMessage = 'An unexpected error occurred.';\n  if (typeof error === 'string') {\n    errorMessage = error;\n  } else if (error.message) {\n    if (error.message.includes('Internal JSON-RPC error')) {\n      if (error.message.includes('insufficient funds')) {\n        errorMessage = 'Your wallet has insufficient funds to complete this transaction.';\n      } else if (error.message.includes('gas required exceeds allowance')) {\n        errorMessage = 'The transaction requires more gas than currently allowed. Please try with a lower price.';\n      } else if (error.message.includes('nonce too low')) {\n        errorMessage = 'Transaction sequence error: Please reset your MetaMask account or wait for pending transactions.';\n      } else {\n        errorMessage = 'A network error occurred. Please check your connection and try again.';\n      }\n    } else if (error.message.includes('User denied')) {\n      errorMessage = 'Transaction was cancelled by the user.';\n    } else if (error.message.includes('MetaMask')) {\n      errorMessage = 'Please ensure MetaMask is installed and unlocked.';\n    }\n  }\n  return {\n    message: errorMessage,\n    context: context,\n    originalError: error\n  };\n};\nexport const displayErrorMessage = (error, context = '') => {\n  const processedError = handleWeb3Error(error, context);\n  console.error(`${processedError.context}: `, processedError.originalError);\n  return processedError.message;\n};","map":{"version":3,"names":["handleWeb3Error","error","context","errorMessage","message","includes","originalError","displayErrorMessage","processedError","console"],"sources":["C:/Users/evyatar/Documents/Smart contract/website/BlockEstate/frontend/src/real-estate-package/utilsApp/errors.js"],"sourcesContent":["// src/utils/errors.js\r\nexport const handleWeb3Error = (error, context = '') => {\r\n    let errorMessage = 'An unexpected error occurred.';\r\n    \r\n    if (typeof error === 'string') {\r\n        errorMessage = error;\r\n    } else if (error.message) {\r\n        if (error.message.includes('Internal JSON-RPC error')) {\r\n            if (error.message.includes('insufficient funds')) {\r\n                errorMessage = 'Your wallet has insufficient funds to complete this transaction.';\r\n            } else if (error.message.includes('gas required exceeds allowance')) {\r\n                errorMessage = 'The transaction requires more gas than currently allowed. Please try with a lower price.';\r\n            } else if (error.message.includes('nonce too low')) {\r\n                errorMessage = 'Transaction sequence error: Please reset your MetaMask account or wait for pending transactions.';\r\n            } else {\r\n                errorMessage = 'A network error occurred. Please check your connection and try again.';\r\n            }\r\n        } else if (error.message.includes('User denied')) {\r\n            errorMessage = 'Transaction was cancelled by the user.';\r\n        } else if (error.message.includes('MetaMask')) {\r\n            errorMessage = 'Please ensure MetaMask is installed and unlocked.';\r\n        }\r\n    }\r\n    \r\n    return {\r\n        message: errorMessage,\r\n        context: context,\r\n        originalError: error\r\n    };\r\n};\r\n\r\nexport const displayErrorMessage = (error, context = '') => {\r\n    const processedError = handleWeb3Error(error, context);\r\n    console.error(`${processedError.context}: `, processedError.originalError);\r\n    return processedError.message;\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAGA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,KAAK;EACpD,IAAIC,YAAY,GAAG,+BAA+B;EAElD,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;IAC3BE,YAAY,GAAGF,KAAK;EACxB,CAAC,MAAM,IAAIA,KAAK,CAACG,OAAO,EAAE;IACtB,IAAIH,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;MACnD,IAAIJ,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QAC9CF,YAAY,GAAG,kEAAkE;MACrF,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,gCAAgC,CAAC,EAAE;QACjEF,YAAY,GAAG,0FAA0F;MAC7G,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;QAChDF,YAAY,GAAG,kGAAkG;MACrH,CAAC,MAAM;QACHA,YAAY,GAAG,uEAAuE;MAC1F;IACJ,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;MAC9CF,YAAY,GAAG,wCAAwC;IAC3D,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC3CF,YAAY,GAAG,mDAAmD;IACtE;EACJ;EAEA,OAAO;IACHC,OAAO,EAAED,YAAY;IACrBD,OAAO,EAAEA,OAAO;IAChBI,aAAa,EAAEL;EACnB,CAAC;AACL,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAGA,CAACN,KAAK,EAAEC,OAAO,GAAG,EAAE,KAAK;EACxD,MAAMM,cAAc,GAAGR,eAAe,CAACC,KAAK,EAAEC,OAAO,CAAC;EACtDO,OAAO,CAACR,KAAK,CAAC,GAAGO,cAAc,CAACN,OAAO,IAAI,EAAEM,cAAc,CAACF,aAAa,CAAC;EAC1E,OAAOE,cAAc,CAACJ,OAAO;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}